{"version":3,"sources":["api/index.js","tools/cache-tool.js","config/config.js","api/adminApi.js","pages/login/login.jsx","pages/admin/components/left-nav/left-nav.jsx","pages/admin/components/right-header/right-header.jsx","pages/home/components/top-card/top-card.jsx","pages/home/components/source-count/source-count.jsx","api/homeApi.js","pages/home/components/buy-count/buy-count.jsx","pages/home/pages/home-list.jsx","components/LikeUploadImg.jsx","pages/home/pages/home-common.jsx","pages/notFound/not-found.jsx","pages/home/home.jsx","api/resourceApi.js","pages/resource/pages/add-resource.jsx","pages/resource/pages/resource-list.jsx","pages/resource/pages/edit-resource.jsx","pages/resource/resource.jsx","api/lifejobApi.js","pages/lifejob/pages/life-list.jsx","components/rich-text-editor.jsx","pages/lifejob/pages/add-edit-life.jsx","pages/lifejob/life-job.jsx","api/liveApi.js","pages/lives/pages/add-live.jsx","pages/lives/pages/lives-list.jsx","pages/lives/pages/edit-live.jsx","pages/lives/lives.jsx","components/LikeTag.jsx","api/activitiesApi.js","pages/activities/pages/add-activities.jsx","pages/activities/pages/activities-list.jsx","pages/activities/pages/edit-activities.jsx","pages/activities/activities.jsx","pages/setting/pages/edit-password.jsx","pages/setting/pages/account-setting.jsx","pages/setting/pages/member-count.jsx","pages/setting/setting.jsx","pages/admin/admin.jsx","App.js","store/sagas.js","store/reducers.js","store/index.js","index.js","pages/login/images/xiaoliao.png","pages/admin/components/left-nav/images/xiaoliao.png"],"names":["randomCode","length","chars","result","i","Math","floor","random","ajax","promise","url","params","method","Promise","resolve","reject","toUpperCase","axios","data","then","response","status","removeUser","PubSub","publish","catch","error","defaults","timeout","headers","post","interceptors","request","use","config","console","log","saveObj","key","obj","store","set","getObj","get","checkLogout","saveUser","userObj","remove","getUser","Login","className","src","xl","alt","name","initialValues","remember","onFinish","values","account","password","hash_pwd","md5","message","success","msg","props","history","replace","warning","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","type","htmlType","Component","connect","Sider","SubMenu","LeftNav","state","menuList","menus","account_name","account_icon","_getOpenKeys","path","item","children","find","c_item","_key","subscribe","setState","map","title","icon","style","collapsed","fontSize","marginLeft","display","_renderMenu","to","this","location","pathname","openKeys","pPath","substr","indexOf","trigger","collapsible","width","height","theme","mode","defaultSelectedKeys","selectedKeys","defaultOpenKeys","withRouter","Header","confirm","RightHeader","_logout","ExclamationCircleOutlined","content","cancelText","okText","onOk","onCancel","padding","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","onClick","toggle","TopCard","pathLink","iconClassName","cardMainTitle","cardSubTitle","bgColor","backgroundColor","SourceCount","_loadData","tempData","push","getOptions","xAxis","yAxis","series","option","BuyCount","tooltip","formatter","legend","orient","left","radius","center","value","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","HomeList","beforeUpload","file","isJpgOrPng","isLt2M","size","LikeUploadImg","loading","imageUrl","handleChange","info","imgUrl","successCallBack","nextProps","nextContext","upLoadImg","upLoadBtnTitle","upLoadName","upLoadAction","uploadButton","LoadingOutlined","PlusOutlined","marginTop","listType","showUploadList","action","onChange","TextArea","HomeCommon","siteLogoUrl","homeFormRef","createRef","homeItem","current","setFieldsValue","site_logo","callback","labelCol","xs","span","wrapperCol","warn","site_name","site_keyword","site_des","site_copy","site_bei","token","editWebSite","goBack","ref","label","rows","textAlign","NotFound","Home","component","getResourceCategory","getResourceClasses","getResourceArea","getResourceFormat","getResourceMate","getResourceList","page_num","page_size","Option","Dragger","AddResource","focusImgUrl","dragFileList","resource_category","resource_classes","resource_format","resource_mate","resource_area","resource_name","resource_author","resource_category_id","resource_classes_id","resource_area_id","resource_mate_id","resource_format_id","resource_price","is_focus","resource_publish_time","Moment","Date","format","resource_content","resource_img","focus_img","addResource","id","category_name","classes_name","area_name","mate_name","format_name","valuePropName","checkedChildren","unCheckedChildren","disabled","multiple","onRemove","filter","uid","InboxOutlined","ResourceList","resourceList","resource_list","totalSize","resource_count","columns","dataIndex","align","render","text","record","defaultChecked","checked","notification","description","resource","pageNum","pageSize","AddBtn","extra","rowKey","dataSource","pagination","total","EditResource","resource_id","tag","resourceFormRef","resourceItem","editResource","fileList","Resource","getJobList","LifeList","lifeList","job_list","job_count","job_name","job","RichTextEditor","editorState","BraftEditor","createEditorState","getContent","toHTML","submitContent","a","handleEditorChange","editorControls","uploadHandler","ContentUtils","insertMedias","extendControls","uploadName","data-title","htmlContent","controls","onSave","border","AddEditLife","job_pre","job_family","job_content","lifejobFormRef","lifejob_ref","jobItem","job_img","job_author","job_pre_edu_id","job_family_edu_id","job_time","editJob","addJob","pre_edu_name","job_family_name","LifeJob","getLiveTheme","getLivePerson","getLive","RangePicker","AddLive","live_theme","live_person","live_title","live_author","live_price","live_person_id","live_theme_id","live_url","live_begin_time","live_time","live_end_time","live_img","addLive","showTime","live_person_name","live_theme_title","LivesList","liveList","list","live_count","live","EditLive","live_id","liveFormRef","liveItem","editLive","LikeTag","tags","inputVisible","inputValue","handleClose","removedTag","tagsCallBack","showInput","input","focus","handleInputChange","e","target","handleInputConfirm","saveInputRef","forMap","tagElem","closable","onClose","preventDefault","tagsArr","tagChild","enter","scale","opacity","duration","onComplete","leave","appear","marginBottom","onBlur","onPressEnter","getActivitiesAddress","getActivitiesObject","getActivitiesBus","getActivitiesList","AddActivities","activities_address","activities_object","activities_bus","activities_intro_ref","activities_trip_ref","activities_days_ref","activities_notice_ref","activities_time","activities_name","activities_price","activities_address_id","activities_object_id","activities_bus_day_id","activities_count","tagStr","join","activities_intro","activities_trip","activities_day","activities_notice","activities_img","activities_tag","addActivities","activities_object_name","activities_bus_day","ActivitiesList","activitiesList","activities_list","activities","activities_form_ref","activitiesItem","split","editActivities","EditActivities","EditPassword","handleCancel","hideFunc","visible","footer","old_password","new_password","old_pwd","new_pwd","changeAdminPwd","formRef","AccountSetting","editPassword","editPwdPanelShow","_hidePwdPanel","sm","changeAdminMsg","justifyContent","alignItems","color","cursor","MemberCount","Setting","Content","Footer","Admin","unsubscribe","exact","from","Activities","Lives","App","dispatch","mySaga","defaultState","sagaMiddleware","createSagaMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","createStore","run","mySagas","moment","locale","ReactDOM","zhCN","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.42ffc6ed.chunk.js","sourcesContent":["import axios from 'axios';\nimport {removeUser} from \"./adminApi\";\nimport PubSub from 'pubsub-js';\n\n// 环境的切换\n/*const runVersion = process.env.NODE_ENV;\nif (runVersion === 'development') {\n    axios.defaults.baseURL = 'http://demo.itlike.com/web/xlmc/api';\n} else if (runVersion === 'production') {\n    axios.defaults.baseURL = 'http://demo.itlike.com/web/xlmc/api';\n}*/\n\n// 请求的超时时间\naxios.defaults.timeout = 10000;\n// post请求头\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8;';\n\n// 配置请求拦截器\naxios.interceptors.request.use((config) => {\n    // 1. 一些情求需要统一加token\n    // 2. 统一设置符合服务器要求的信息\n    // 3. 每次请求前加上请求动画\n    return config;\n}, (error) => {\n    return Promise.error(error);\n});\n\n// 配置响应拦截器\naxios.interceptors.response.use((response) => {\n    // 数据过滤\n    if (response.status === 200) {\n        return Promise.resolve(response.data);\n    } else {\n        return Promise.reject(response.data);\n    }\n}, (error) => {\n    console.log(error);\n});\n\n/* 生成随机长度的随机数 */\nfunction randomCode(length) {\n    let chars = ['0','1','2','3','4','5','6','7','8','9'];\n    let result = '';\n    for (let i=0;i<length;i++) {\n        let index = Math.floor(Math.random()*9);\n        result += chars[index];\n    }\n    return result;\n}\n\nexport default function ajax(url = '', params = {}, method = 'get') {\n    // 0. 定义变量\n    let promise;\n    // 1. 返回 Promise\n    return new Promise((resolve, reject) => {\n        method = method.toUpperCase();\n        // 1.1 判断请求的类型\n        if (method === 'GET') {\n            // 添加随机数,去除缓存\n            params['itlike'] = randomCode(5);\n            promise = axios({url, params});\n        } else if (method === 'POST') {\n            promise = axios({method, url, data: params});\n        }\n        // 1.2 处理结果并返回\n        promise.then(response => {\n            // 处理token是否失效\n            if (response.status === 2) {\n                // 清空本地管理员信息\n                removeUser();\n                // 发布token失效信息\n                PubSub.publish('tokenOut',{});\n            } else {\n                resolve(response);\n            }\n        }).catch(error => {\n            reject(error);\n        });\n    });\n}\n","import store from \"store\";\n\nexport const saveObj = (key,obj) => {\n    store.set(key,obj);\n};\nexport const removeObj = (key) => {\n    store.remove(key);\n};\nexport const getObj = (key) => {\n    return  store.get(key) || {};\n};\n","export default {\n    BASE_URL: 'http://itlike.cwj.gold:3000',\n    KEY: 'iTlike@#*09221``~~---++===yyyjhh',\n    ADMIN_KEY: 'admin',\n}\n","import ajax from './index';\nimport {saveObj, getObj, removeObj} from '../tools/cache-tool';\nimport config from '../config/config';\n/*\n*   提供给外部是否登录的函数\n* */\nexport const isLogin = () => {\n    let userObj = getObj(config.ADMIN_KEY);\n    return !!userObj.token;\n}\n/*\n*   登录接口\n* */\nexport const checkLogin = (account, password) => {\n    return ajax('/api/auth/admin/login', {account, password}, 'post');\n}\n/*\n*   退出登录\n* */\nexport const checkLogout = () => {\n    return ajax('/api/auth/admin/logout');\n}\n/*\n*   保存用户登录信息\n* */\nexport const saveUser = (userObj) => {\n    saveObj(config.ADMIN_KEY, userObj);\n}\n/*\n*   删除本地存储登录信息\n* */\nexport const removeUser = () => {\n    removeObj(config.ADMIN_KEY);\n}\n/*\n*   获取用户信息\n* */\nexport const getUser = () => {\n    return getObj(config.ADMIN_KEY);\n}\n/*\n*   修改管理员信息\n* */\nexport const changeAdminMsg = (token, account_name, account_icon) => {\n    return ajax('/api/auth/admin/edit', {token, account_name, account_icon}, 'post')\n}\n/*\n*   修改管理员密码\n* */\nexport const changeAdminPwd = (token, old_pwd, new_pwd) => {\n    return ajax('/api/auth/admin/reset_pwd', {token, old_pwd, new_pwd}, 'post')\n}\n","import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport {Form, Input, Button, message} from 'antd';\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\nimport md5 from 'blueimp-md5';\n\nimport './css/login.css';\nimport xl from './images/xiaoliao.png';\nimport {checkLogin, saveUser} from '../../api/adminApi';\nimport config from '../../config/config';\n\nclass Login extends Component {\n    render() {\n        const onFinish = values => {\n            // 对密码进行MD5加密\n            const hash_pwd = md5(values.password, config.KEY);\n            // 处理登录业务\n            checkLogin(values.account, hash_pwd).then((result) => {\n                if (result && result.status === 1) {\n                    // 保存用户信息到本地\n                    message.success(result.msg);\n                    saveUser(result.data);\n                    // 跳转到主面板\n                    this.props.history.replace('/');\n                } else if (result && result.status === 0) {\n                    message.warning(result.msg);\n                } else {\n                    message.error('网络出现一点小问题');\n                }\n            }).catch((error) => {\n                message.error('服务器端内部错误');\n            });\n        };\n        return (\n            <div className=\"login\">\n                <div className=\"login-wrap\">\n                    <div className=\"avatar\">\n                        <img src={xl} alt=\"\"/>\n                    </div>\n                    <div className=\"content\">\n                        <Form\n                            name=\"normal_login\"\n                            className=\"login-form\"\n                            initialValues={{remember: true}}\n                            onFinish={onFinish}\n                        >\n                            <Form.Item name=\"account\" rules={[{required: true, message: '账户名不能为空!'}]}>\n                                <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"请输入账户\"/>\n                            </Form.Item>\n                            <Form.Item name=\"password\" rules={[{required: true, message: '密码不能为空!'}]}>\n                                <Input\n                                    prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                                    type=\"password\"\n                                    placeholder=\"请输入密码\"\n                                />\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">登录</Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(null, null)(Login)\n","import React, {Component} from 'react';\nimport {withRouter, Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {Layout, Menu} from 'antd';\nimport PubSub from 'pubsub-js';\n// 引入目录JSON文件\nimport menus from './config/menuConfig';\n\nimport './fonts/iconfont.css';\nimport xl from './images/xiaoliao.png';\nimport './left-nav.css';\n\n// 引入管理员数据\nimport {getUser} from '../../../../api/adminApi';\nimport config from \"../../../../config/config\";\n\nconst {Sider} = Layout;\nconst {Item, SubMenu} = Menu;\n\nclass LeftNav extends Component {\n    state = {\n        menuList: menus,\n        account_name: getUser().account_name,\n        account_icon: getUser().account_icon,\n    };\n    static propTypes = {\n        collapsed: PropTypes.bool.isRequired,\n    };\n\n    componentDidMount() {\n        // 订阅管理员信息更新\n        PubSub.subscribe('changeAdminMsg', (msg, data) => {\n            if (msg === 'changeAdminMsg') {\n                this.setState({\n                    account_name: getUser().account_name,\n                    account_icon: getUser().account_icon,\n                });\n            }\n        })\n    }\n\n    /* 创建左侧菜单 */\n    _renderMenu(menuList) {\n        return menuList.map((item) => {\n            // 取出一级菜单\n            if (!item.children) {\n                return (\n                    <Item key={item._key}>\n                        <Link to={item._key}>\n                            <span className={'iconfont ' + item.icon}\n                                  style={this.props.collapsed ? {fontSize: 25, marginLeft: -8} : {}}></span>\n                            <span style={this.props.collapsed ? {display: 'none'} : {}}>{item.title}</span>\n                        </Link>\n                    </Item>\n                );\n            } else {\n                return (\n                    <SubMenu key={item._key} title={\n                        <span>\n                            <span className={'iconfont ' + item.icon}\n                                  style={this.props.collapsed ? {fontSize: 25, marginLeft: -8} : {}}></span>\n                            <span style={this.props.collapsed ? {display: 'none'} : {}}>{item.title}</span>\n                        </span>}>\n                        {this._renderMenu(item.children)}\n                    </SubMenu>\n                );\n            }\n        })\n    }\n\n    // 根据当前的菜单列表以及当前的路由路径获取应该被展开的菜单项\n    _getOpenKeys = (menuList, path) => {\n        for (let i = 0; i < menuList.length; i++) {\n            // 1. 获取配置对象\n            let item = menuList[i];\n            // 2. 判断\n            if (item.children && item.children.find(c_item => c_item._key === path)) return item._key;\n        }\n        return '';\n    }\n\n    render() {\n        /* 获取当前的路由 */\n        const {account_name, account_icon, menuList} = this.state;\n        let path = this.props.location.pathname;\n        let openKeys = this._getOpenKeys(menuList, path);\n        let pPath = path.substr(0, path.indexOf('/', 2));\n        return (\n            <Sider trigger={null} collapsible collapsed={this.props.collapsed}>\n                <div className=\"logo\">\n                    <div className=\"avatar\" style={this.props.collapsed ? {width: 40, height: 40} : {}}>\n                        <img src={account_icon ? config.BASE_URL+account_icon : xl} alt=\"\"/>\n                    </div>\n                    <h4>{account_name ? account_name : '撩课学院'}</h4>\n                </div>\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[path]} selectedKeys={[path,pPath]}\n                      defaultOpenKeys={[openKeys]}>\n                    {this._renderMenu(this.state.menuList)}\n                </Menu>\n            </Sider>\n        );\n    }\n}\n\nexport default withRouter(LeftNav);\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {Layout, Button, message, Modal} from 'antd';\nimport {ExclamationCircleOutlined} from '@ant-design/icons';\nimport {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n} from '@ant-design/icons';\nimport './right-header.css';\nimport ajax from \"../../../../api\";\nimport {checkLogout, removeUser} from '../../../../api/adminApi';\n\nconst {Header} = Layout;\nconst {confirm} = Modal;\n\nclass RightHeader extends Component {\n    static propTypes = {\n        collapsed: PropTypes.bool.isRequired,\n        toggle: PropTypes.func.isRequired,\n    }\n\n    componentDidMount() {\n        // 获取当前城市天气\n        // this._weather();\n    }\n\n    // 天气预报\n    // https://restapi.amap.com/v3/weather/weatherInfo?key=9c3bb5b50f35a3f045417e6526fffe4f&city=350100&output=JSON\n    _weather() {\n        const city = '350100';\n        const key = '9c3bb5b50f35a3f045417e6526fffe4f';\n        const url = `https://restapi.amap.com/v3/weatherInfo?key=${key}&city=${city}&output=JSON`;\n        ajax(url).then(data => {\n            console.log(data);\n            if (data.status === \"0\") {\n                // message.error('网络异常: ' + data.info);\n            }\n        }).catch(error => {\n            console.log(error);\n            message.error('网络异常: ' + error);\n        })\n    }\n\n    // 退出登录\n     _logout =  () => {\n        confirm({\n            title: '您确定退出嘛?',\n            icon: <ExclamationCircleOutlined/>,\n            content: '再想想看嘛~',\n            cancelText: '取消',\n            okText: '确定',\n            onOk: () => {\n                checkLogout().then((result) => {\n                    removeUser();\n                    if (result && result.status === 1) {\n                        message.success(result.msg);\n                    } else {\n                        message.success('服务器内部出现问题');\n                    }\n                    this.props.history.replace('/login');\n                })\n            },\n            onCancel() {\n            },\n        });\n    }\n\n    render() {\n        return (\n            <Header className=\"header\" style={{padding: 0}}>\n                {React.createElement(this.props.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                    className: 'trigger',\n                    onClick: this.props.toggle,\n                })}\n                <div className=\"navbar-header\">\n                    <h3 className=\"navbar-brand\">引擎计划-后台管理系统</h3>\n                    <div className=\"navbar-header-right\">\n                        <Button type=\"danger\" className=\"exit-btn\" onClick={this._logout}>退出</Button>\n                    </div>\n                </div>\n            </Header>\n        );\n    }\n}\n\nexport default withRouter(RightHeader);\n","import React from \"react\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport './top-card.css';\n\nclass TopCard extends React.Component {\n    static propTypes = {\n        pathLink: PropTypes.string.isRequired,\n        iconClassName: PropTypes.string.isRequired,\n        cardMainTitle: PropTypes.string.isRequired,\n        cardSubTitle: PropTypes.string.isRequired,\n        bgColor: PropTypes.string.isRequired,\n    };\n\n    render() {\n        const {pathLink, iconClassName, cardMainTitle, cardSubTitle, bgColor} = this.props;\n        return (\n            <div className=\"cell\" style={{backgroundColor: bgColor}}>\n                <Link to={pathLink} className=\"cell-content\">\n                    <i className={iconClassName}/>\n                    <h4>{cardMainTitle}</h4>\n                    <h5>{cardSubTitle}</h5>\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(TopCard);\n","import React from \"react\";\nimport {Card} from 'antd';\nimport ReactEcharts from \"echarts-for-react\";\nimport {getSourceCount} from \"../../../../api/homeApi\";\n\nexport default class SourceCount extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n        }\n    }\n\n    componentDidMount() {\n        this._loadData();\n    }\n\n    _loadData = () => {\n        getSourceCount().then(result => {\n            let tempData = [];\n            if (result.status === 1) {\n                for (let key in result.data) {\n                    tempData.push(result.data[key]);\n                }\n                // 更新状态机\n                this.setState({\n                    data: tempData,\n                });\n            }\n        }).catch(error=>{\n            console.log(error);\n        });\n    };\n    getOptions = () => {\n        return {\n            xAxis: {\n                type: 'category',\n                data: ['幼教', '职场人生', '活动专区', '直播中心']\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [{\n                data: this.state.data,\n                type: 'bar'\n            }]\n        };\n    };\n\n    render() {\n        return (\n            <Card title=\"各版块资源总数量统计\">\n                <ReactEcharts option={this.getOptions()}/>\n            </Card>\n        );\n    }\n}\n","import ajax from './index';\n\n// 各个资源的总数量\nexport const getSourceCount = () => ajax('/api/auth/home/source_count');\n// 各个资源购买总数\nexport const getBuyCount = () => ajax('/api/auth/home/buy_count');\n// 获取网站配置信息\nexport const getWebSiteInfo = () => ajax('/api/auth/home/info');\n// 修改网站配置信息\nexport const editWebSite = (\n    token,\n    site_name,\n    site_keyword,\n    site_des,\n    site_logo,\n    site_copy,\n    site_bei,\n) => ajax('/api/auth/home/edit', {\n    token,\n    site_name,\n    site_keyword,\n    site_des,\n    site_logo,\n    site_copy,\n    site_bei,\n}, 'post');\n\n\n","import React from \"react\";\nimport {Card} from 'antd';\nimport ReactEcharts from \"echarts-for-react\";\nimport {getBuyCount} from \"../../../../api/homeApi\";\n\nexport default class BuyCount extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n        }\n    }\n\n    componentDidMount() {\n        this._loadData();\n    }\n\n    _loadData = () => {\n        getBuyCount().then(result => {\n            let tempData = [];\n            if (result.status === 1) {\n                for (let key in result.data) {\n                    tempData.push(result.data[key]);\n                }\n                // 更新状态机\n                this.setState({\n                    data: tempData,\n                });\n            }\n        }).catch(error=>{\n            console.log(error);\n        });\n    };\n    getOptions = () => {\n        const {data} = this.state;\n        return {\n            tooltip: {\n                trigger: 'item',\n                formatter: '{a} <br/>{b} : {c} ({d}%)'\n            },\n            legend: {\n                orient: 'vertical',\n                left: 'left',\n                data: ['幼教资源', '职场人生', '活动专区', '直播课堂'],\n            },\n            series: [\n                {\n                    name: '购买数量',\n                    type: 'pie',\n                    radius: '55%',\n                    center: ['50%', '60%'],\n                    data: [\n                        {value: data[0], name: '幼教资源'},\n                        {value: data[1], name: '职场人生'},\n                        {value: data[2], name: '活动专区'},\n                        {value: data[3], name: '直播课堂'},\n                    ],\n                    emphasis: {\n                        itemStyle: {\n                            shadowBlur: 10,\n                            shadowOffsetX: 0,\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\n                        }\n                    }\n                }\n            ]\n        };\n    };\n\n    render() {\n        return (\n            <Card title=\"各业务购买数量统计\">\n                <ReactEcharts option={this.getOptions()}></ReactEcharts>\n            </Card>\n        );\n    }\n}\n","import React from \"react\";\nimport TopCard from \"../components/top-card/top-card\";\n\nimport SourceCount from \"../components/source-count/source-count\";\nimport BuyCount from \"../components/buy-count/buy-count\";\nimport '../home.css';\n\nexport default class HomeList extends React.Component {\n    render() {\n        return (\n            <div className=\"home\">\n                <div className=\"home-top\">\n                    <TopCard\n                        pathLink=\"/home/common\"\n                        iconClassName=\"iconfont icon-hezuohuobanmiyueguanli\"\n                        cardMainTitle=\"通用配置\"\n                        cardSubTitle=\"客户端通用信息配置\"\n                        bgColor=\"red\"\n                    />\n                    <TopCard\n                        pathLink=\"/\"\n                        iconClassName=\"iconfont icon-fuwudiqiu\"\n                        cardMainTitle=\"管理员中心\"\n                        cardSubTitle=\"管理员管理\"\n                        bgColor=\"purple\"\n                    />\n                    <TopCard\n                        pathLink=\"/\"\n                        iconClassName=\"iconfont icon-shenjing\"\n                        cardMainTitle=\"系统说明\"\n                        cardSubTitle=\"系统使用说明\"\n                        bgColor=\"orange\"\n                    />\n                </div>\n                <div className=\"home-content\">\n                    <div className=\"home-content-card\">\n                        <SourceCount/>\n                    </div>\n                    <div className=\"home-content-card\">\n                        <BuyCount/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport {Upload, message} from 'antd';\nimport {LoadingOutlined, PlusOutlined} from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport config from \"../config/config\";\n\nfunction beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n        message.error('请上传JPG/PNG图片!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n        message.error('上传图片大小不能超过2MB!');\n    }\n    return isJpgOrPng && isLt2M;\n}\n\nclass LikeUploadImg extends React.Component {\n    state = {loading: false, imageUrl: ''};\n    static propTypes = {\n        upLoadBtnTitle: PropTypes.string.isRequired,    // 上传图片的按钮文字\n        upLoadName: PropTypes.string.isRequired,    // 上传图片的key\n        upLoadAction: PropTypes.string.isRequired,    // 上传图片的接口路径\n        successCallBack: PropTypes.func.isRequired,\n        upLoadImg: PropTypes.string,\n    };\n\n    UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.upLoadImg) {\n            this.setState({\n                imageUrl: nextProps.upLoadImg\n            });\n        }\n    }\n\n    handleChange = info => {\n        if (info.file.status === 'uploading') {\n            this.setState({loading: true});\n            return;\n        }\n        if (info.file.response && info.file.status === 'done' && info.file.response.status === 1) {\n            const name = info.file.response.data.name;\n            // 把结果返回\n            this.setState({\n                imgUrl: config.BASE_URL + name,\n                loading: false,\n            });\n            this.props.successCallBack(name);\n        }\n    };\n\n    render() {\n        const {loading, imageUrl} = this.state;\n        const {upLoadBtnTitle, upLoadName, upLoadAction} = this.props;\n        const uploadButton = (\n            <div>\n                {loading ? <LoadingOutlined/> : <PlusOutlined/>}\n                <div style={{marginTop: 8}}>{upLoadBtnTitle}</div>\n            </div>\n        );\n        return (\n            <Upload\n                name={upLoadName}\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                showUploadList={false}\n                action={upLoadAction}\n                beforeUpload={beforeUpload}\n                onChange={this.handleChange}\n            >\n                {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{width: '100%'}}/> : uploadButton}\n            </Upload>\n        );\n    }\n}\n\nexport default LikeUploadImg;\n","import React from \"react\";\nimport {Card, Form, Input, Button, Divider, message} from 'antd';\n\n\nimport LikeUploadImg from \"../../../components/LikeUploadImg\";\nimport config from \"../../../config/config\";\nimport {getUser} from \"../../../api/adminApi\";\nimport {getObj} from \"../../../tools/cache-tool\";\nimport {editWebSite, getWebSiteInfo} from \"../../../api/homeApi\";\n\nconst {Item} = Form;\nconst {TextArea} = Input;\n\nexport default class HomeCommon extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            siteLogoUrl: '',\n        };\n        this.homeFormRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // 获取网站配置信息\n        getWebSiteInfo().then(result => {\n            if (result && result.status === 1) {\n                const homeItem = result.data;\n                this.homeFormRef.current.setFieldsValue(homeItem);\n                this.setState({\n                    siteLogoUrl: homeItem.site_logo,\n                });\n            }\n        }).catch(error => {\n            message.error('获取网站配置信息失败');\n        });\n    }\n\n    // 销毁组件前清空state内存\n    componentWillUnmount() {\n        this.setState = (state, callback) => {\n            return false;\n        }\n    }\n\n    render() {\n        const {siteLogoUrl} = this.state;\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 4},\n            },\n            wrapperCol: {\n                xs: {span: 12},\n            }\n        };\n        const onFinish = (values) => {\n            const {siteLogoUrl} = this.state;\n            if (!siteLogoUrl) return message.warn('请上传网站LOGO');\n            let {\n                site_name,\n                site_keyword,\n                site_des,\n                site_copy,\n                site_bei,\n            } = values;\n            editWebSite(\n                getUser().token,\n                site_name,\n                site_keyword,\n                site_des,\n                siteLogoUrl,\n                site_copy,\n                site_bei,\n            ).then(result => {\n                if (result && result.status === 1) {\n                    message.success(result.msg);\n                    this.props.history.goBack();\n                }\n            }).catch(error => {\n                message.error('修改网站配置信息失败');\n            });\n        };\n        return (\n            <Card title={getObj('lifejob_tag') === 'add' ? \"新增职场人生\" : \"编辑人生资源\"}>\n                <Form {...formItemLayout} onFinish={onFinish} ref={this.homeFormRef}>\n                    <Item label={\"网站标题\"} name={\"site_name\"} rules={[{required: true, message: '请输入网站标题'}]}>\n                        <Input placeholder={\"请输入网站标题\"}/>\n                    </Item>\n                    <Item label={\"关键字\"} name={\"site_keyword\"} rules={[{required: true, message: '请输入网站关键字'}]}>\n                        <TextArea rows={2} placeholder={\"请输入网站关键字\"}/>\n                    </Item>\n                    <Item label={\"描述\"} name={\"site_des\"} rules={[{required: true, message: '请输入网站描述'}]}>\n                        <TextArea rows={4} placeholder={\"请输入网站描述\"}/>\n                    </Item>\n\n                    <Item label={\"网站LOGO\"} name={\"site_logo\"}>\n                        <LikeUploadImg upLoadBtnTitle={\"上传LOGO\"} upLoadName={\"site_logo\"}\n                                       upLoadAction={\"/api/auth/home/upload_home\"}\n                                       upLoadImg={siteLogoUrl ? config.BASE_URL + siteLogoUrl : ''}\n                                       successCallBack={(name) => {\n                                           this.setState({siteLogoUrl: name})\n                                       }}/>\n                    </Item>\n                    <Item label={\"版权信息\"} name={\"site_copy\"} rules={[{required: true, message: '请输入网站版权信息'}]}>\n                        <Input placeholder={\"请输入网站版权信息\"}/>\n                    </Item>\n                    <Item label={\"备案号\"} name={\"site_bei\"} rules={[{required: true, message: '请输入网站备案号'}]}>\n                        <Input placeholder={\"请输入网站备案号\"}/>\n                    </Item>\n                    <Item wrapperCol={{span: 20}}>\n                        <div style={{textAlign: 'center', marginTop: 30}}>\n                            <Button type={\"primary\"}\n                                    htmlType={\"submit\"}>立即提交</Button>\n                            <Divider type={\"vertical\"}/>\n                            <Button onClick={() => this.props.history.goBack()}>取消</Button>\n                        </div>\n                    </Item>\n                </Form>\n            </Card>\n        );\n    }\n}\n","import React from \"react\";\nimport {Button} from 'antd';\n\nimport './not-found.css';\nexport default class NotFound extends React.Component {\n    render() {\n        return (\n            <div className=\"not-found\">\n                <Button type=\"primary\" onClick={()=>this.props.history.replace('/')}>回到首页</Button>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport {Switch,Route} from 'react-router-dom';\n\nimport './home.css';\nimport HomeList from \"./pages/home-list\";\nimport HomeCommon from \"./pages/home-common\";\nimport NotFound from \"../notFound/not-found\";\n\nexport default class Home extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route path={\"/home/common\"} component={HomeCommon}/>\n                <Route path={\"/home\"} component={HomeList}/>\n                <Route component={NotFound}/>\n            </Switch>\n        );\n    }\n}\n","import ajax from './index';\n\n/*\n*   1. 获取分类\n* */\nexport const getResourceCategory = () => ajax('/api/auth/resource/r_category');\n/*\n*   2. 获取所属班级\n* */\nexport const getResourceClasses = () => ajax('/api/auth/resource/r_classes');\n/*\n*   3. 获取所属区域\n* */\nexport const getResourceArea = () => ajax('/api/auth/resource/r_Area');\n/*\n*   4. 获取所属格式\n* */\nexport const getResourceFormat = () => ajax('/api/auth/resource/r_format');\n/*\n*   5. 获取所属材料\n* */\nexport const getResourceMate = () => ajax('/api/auth/resource/r_mate');\n/*\n*   6. 添加资源\n* */\nexport const addResource = (\n    token,\n    resource_name,\n    resource_author,\n    resource_publish_time,\n    resource_content,\n    resource_category_id,\n    resource_classes_id,\n    resource_area_id,\n    resource_mate_id,\n    resource_format_id,\n    resource_img,\n    resource_price,\n    is_focus,\n    focus_img,\n) => ajax('/api/auth/resource/add', {\n    token,\n    resource_name,\n    resource_author,\n    resource_publish_time,\n    resource_content,\n    resource_category_id,\n    resource_classes_id,\n    resource_area_id,\n    resource_mate_id,\n    resource_format_id,\n    resource_img,\n    resource_price,\n    is_focus,\n    focus_img,\n}, 'post');\n/*\n*   7. 获取资源列表\n* */\nexport const getResourceList = (page_num, page_size) => ajax('/api/auth/resource/list', {page_num, page_size});\n/*\n*   8. 是否设为轮播图\n* */\nexport const setFocusResource = (id, is_focus) => ajax('/api/auth/resource/set_focus_resource', {id, is_focus});\n/*\n*   9. 删除资源\n* */\nexport const deleteResource = (id) => ajax('/api/auth/resource/delete_resource', {id});\n/*\n*   10. 获取上传文件\n* */\nexport const getFileList = (tag) => ajax('/api/auth/resource/file_list',{tag});\n/*\n*   11. 编辑资源\n* */\nexport const editResource = (\n    token,\n    id,\n    tag,\n    resource_name,\n    resource_author,\n    resource_publish_time,\n    resource_content,\n    resource_category_id,\n    resource_classes_id,\n    resource_area_id,\n    resource_mate_id,\n    resource_format_id,\n    resource_img,\n    resource_price,\n    is_focus,\n    focus_img,\n) => ajax('/api/auth/resource/edit', {\n    token,\n    id,\n    tag,\n    resource_name,\n    resource_author,\n    resource_publish_time,\n    resource_content,\n    resource_category_id,\n    resource_classes_id,\n    resource_area_id,\n    resource_mate_id,\n    resource_format_id,\n    resource_img,\n    resource_price,\n    is_focus,\n    focus_img,\n}, 'post');\n","import React from \"react\";\nimport {Card, Form, Input, Select, Upload, message, Button, Divider, Switch} from 'antd';\nimport {InboxOutlined} from '@ant-design/icons';\nimport Moment from 'moment';\n\nimport LikeUploadImg from \"../../../components/LikeUploadImg\";\nimport config from \"../../../config/config\";\nimport {\n    addResource,\n    getResourceArea,\n    getResourceCategory,\n    getResourceClasses,\n    getResourceFormat,\n    getResourceMate\n} from \"../../../api/resourceApi\";\nimport {getUser} from \"../../../api/adminApi\";\n\nconst {Item} = Form;\nconst {Option} = Select;\nconst {Dragger} = Upload;\n\nexport default class AddResource extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageUrl: '',\n            focusImgUrl: '',\n            dragFileList: [],   // 存放上传文件,\n            resource_category: [],\n            resource_classes: [],\n            resource_format: [],\n            resource_mate: [],\n            resource_area: [],\n        }\n    }\n\n    componentDidMount() {\n        getResourceCategory().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    resource_category: result.data,\n                });\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n        getResourceArea().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    resource_area: result.data,\n                });\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n        getResourceClasses().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    resource_classes: result.data,\n                });\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n        getResourceFormat().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    resource_format: result.data,\n                });\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n        getResourceMate().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    resource_mate: result.data,\n                });\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        const {imageUrl, focusImgUrl, resource_category, resource_classes, resource_area, resource_format, resource_mate} = this.state;\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 4},\n            },\n            wrapperCol: {\n                xs: {span: 12},\n            }\n        };\n        const onFinish = (values) => {\n            const {imageUrl, focusImgUrl, dragFileList} = this.state;\n            if (!dragFileList.length) return message.warn('请上传资源文件');\n            let {resource_name, resource_author, resource_category_id, resource_classes_id, resource_area_id, resource_mate_id, resource_format_id, resource_price, is_focus} = values;\n            if (!imageUrl) return message.warn('请上传资源封面');\n            // 生成创建日期\n            const resource_publish_time = Moment(new Date()).format('YYYY-MM-DD HH:mm:ss');\n            addResource(\n                getUser().token,\n                resource_name,\n                resource_author,\n                resource_publish_time,\n                dragFileList, // resource_content,\n                resource_category_id,\n                resource_classes_id,\n                resource_area_id,\n                resource_mate_id,\n                resource_format_id,\n                imageUrl,\n                resource_price,\n                is_focus ? 1 : 0,\n                focusImgUrl,\n            ).then(result => {\n                if (result?.status === 1) {\n                    message.success('添加资源成功');\n                    this.props.history.goBack();\n                }\n            }).catch(() => {\n                message.error('添加资源失败');\n            });\n        };\n        return (\n            <Card title={\"新增幼教资源\"}>\n                <Form {...formItemLayout} onFinish={onFinish}>\n                    <Item label={\"资源名称\"} name={\"resource_name\"} rules={[{required: true, message: '请输入资源名称'}]}>\n                        <Input/>\n                    </Item>\n                    <Item label={\"资源作者\"} name={\"resource_author\"} rules={[{required: true, message: '请输入作者姓名'}]}>\n                        <Input/>\n                    </Item>\n                    <Item label={\"所属分类\"} name={\"resource_category_id\"} rules={[{required: true, message: '请选择所属分类'}]}>\n                        <Select style={{width: 200}} placeholder={\"请选择所属分类\"}>\n                            {resource_category.map(item => {\n                                return (<Option key={item.id} value={item.id}>{item.category_name}</Option>);\n                            })}\n                        </Select>\n                    </Item>\n                    <Item label={\"所属班级\"} name={\"resource_classes_id\"} rules={[{required: true, message: '请选择所属班级'}]}>\n                        <Select style={{width: 200}} placeholder={\"请选择所属班级\"}>\n                            {resource_classes.map(item => {\n                                return (<Option key={item.id} value={item.id}>{item.classes_name}</Option>);\n                            })}\n                        </Select>\n                    </Item>\n                    <Item label={\"所属领域\"} name={\"resource_area_id\"} rules={[{required: true, message: '请选择所属领域'}]}>\n                        <Select style={{width: 200}} placeholder={\"请选择所属领域\"}>\n                            {resource_area.map(item => {\n                                return (<Option key={item.id} value={item.id}>{item.area_name}</Option>);\n                            })}\n                        </Select>\n                    </Item>\n                    <Item label={\"素材选择\"} name={\"resource_mate_id\"} rules={[{required: true, message: '请选择所属素材'}]}>\n                        <Select style={{width: 200}} placeholder={\"请选择所属领域\"}>\n                            {resource_mate.map(item => {\n                                return (<Option key={item.id} value={item.id}>{item.mate_name}</Option>);\n                            })}\n                        </Select>\n                    </Item>\n                    <Item label={\"格式选择\"} name={\"resource_format_id\"} rules={[{required: true, message: '请选择素材格式'}]}>\n                        <Select style={{width: 200}} placeholder={\"请选择素材格式\"}>\n                            {resource_format.map(item => {\n                                return (<Option key={item.id} value={item.id}>{item.format_name}</Option>);\n                            })}\n                        </Select>\n                    </Item>\n                    <Item label={\"资源价格\"} name={\"resource_price\"} rules={[{required: true, message: '请输入资源价格'}]}>\n                        <Input type={\"number\"} style={{width: 120}}/>\n                    </Item>\n                    <Item label={\"资源封面图\"} name={\"resource_img\"}>\n                        <LikeUploadImg upLoadName={\"resource_upload_img\"}\n                                       upLoadImg={imageUrl ? config.BASE_URL + imageUrl : ''}\n                                       upLoadAction={\"/api/auth/resource/upload_resource\"}\n                                       upLoadBtnTitle={\"上传封面\"} successCallBack={(name) => {\n                            this.setState({imageUrl: name});\n                        }}/>\n                    </Item>\n                    <Item label={\"首页轮播图\"} name={\"focus_img\"}>\n                        <LikeUploadImg upLoadName={\"resource_upload_img\"}\n                                       upLoadImg={focusImgUrl ? config.BASE_URL + focusImgUrl : ''}\n                                       upLoadAction={\"/api/auth/resource/upload_resource\"}\n                                       upLoadBtnTitle={\"上传焦点图\"} successCallBack={(name) => {\n                            this.setState({focusImgUrl: name});\n                        }}/>\n                    </Item>\n                    <Item label={\"是否设置焦点\"} name={\"is_focus\"} valuePropName={\"checked\"}>\n                        <Switch checkedChildren=\"是\" unCheckedChildren=\"否\" disabled={!focusImgUrl}/>\n                    </Item>\n                    <Item label={\"幼教资源\"} name={\"resource_content\"} valuePropName={\"filelist\"}>\n                        <Dragger\n                            name={\"resource_file\"}\n                            multiple={true}\n                            action={\"/api/auth/resource/upload_many_file\"}\n                            onChange={info => {\n                                const {status} = info.file;\n                                if (status !== 'uploading') {\n                                    // console.log(info.file, info.fileList);\n                                }\n                                if (status === 'done') {\n                                    if (info.file.response && info.file.response.status === 1) {\n                                        const dragFileList = this.state.dragFileList;\n                                        dragFileList.push(info.file.response.data);\n                                        this.setState({dragFileList});\n                                    }\n                                    message.success(`${info.file.name} 文件上传成功!`);\n                                } else if (status === 'error') {\n                                    message.error(`${info.file.name} 文件上传失败!`);\n                                }\n                            }}\n                            onRemove={(info) => {\n                                let dragFileList = this.state.dragFileList;\n                                dragFileList = dragFileList.filter(item => {\n                                    return item.uid !== info.response.data.uid;\n                                });\n                                this.setState({dragFileList});\n                            }}\n                        >\n                            <p className=\"ant-upload-drag-icon\"><InboxOutlined/></p>\n                            <p className=\"ant-upload-text\">单击或者拖动文件到此区域上传</p>\n                            <p className=\"ant-upload-hint\">支持单个或多个文件上传</p>\n                        </Dragger>\n                    </Item>\n                    <Item wrapperCol={{span: 20}}>\n                        <div style={{textAlign: 'center', marginTop: 30}}>\n                            <Button type={\"primary\"} htmlType={\"submit\"}>保存</Button>\n                            <Divider type={\"vertical\"}/>\n                            <Button onClick={() => this.props.history.goBack()}>取消</Button>\n                        </div>\n                    </Item>\n                </Form>\n            </Card>\n        );\n    }\n}\n","import React from \"react\";\nimport {Card, Button, Table, Switch, Divider, Modal, message, notification} from 'antd';\nimport {getResourceList, setFocusResource, deleteResource} from \"../../../api/resourceApi\";\nimport config from \"../../../config/config\";\n\nexport default class ResourceList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            resourceList: [],\n            totalSize: 0,\n            pageSize: 4,\n        }\n    }\n\n    componentDidMount() {\n        this._loadData();\n    }\n\n    _loadData = (page_num = 1, page_size = 4) => {\n        getResourceList(page_num, page_size).then(result => {\n            if (result && result.status === 1) {\n                message.success(result.msg);\n                this.setState({\n                    resourceList: result.data.resource_list,\n                    totalSize: result.data.resource_count,\n                });\n            }\n        }).catch(() => {\n            message.error('获取人生列表失败');\n        });\n    };\n\n    // 列的配置信息\n    columns = [\n        {title: 'ID', dataIndex: 'id', width: 50, align: 'center'},\n        {title: '幼教标题', dataIndex: 'resource_name', align: 'center'},\n        {\n            title: '幼教封面', dataIndex: 'resource_img', render: (text) => {\n                return (\n                    <img src={text ? config.BASE_URL + text : ''} alt=\"资源封面\" style={{width: 100}}/>\n                );\n            }, align: 'center'\n        },\n        {title: '所属作者', dataIndex: 'resource_author', align: 'center'},\n        {title: '所属分类', dataIndex: 'category_name', align: 'center'},\n        {\n            title: '首页焦点', dataIndex: 'is_focus', render: (text, record) => {\n                return (\n                    <Switch checkedChildren={\"是\"} unCheckedChildren={\"否\"} defaultChecked={text === 1}\n                            disabled={!record.focus_img} onChange={checked => {\n                        setFocusResource(record.id, checked ? 1 : 0).then(result => {\n                            if (result && result.status === 1) {\n                                notification['success']({\n                                    message: `职场人生:${record.resource_name}`,\n                                    description: `${checked ? '设置为' : '取消'}焦点课程`,\n                                });\n                                record.is_focus = checked ? 1 : 0;\n                            }\n                        });\n                    }}/>\n                );\n            }, align: 'center'\n        },\n        {\n            title: '操作', align: 'center', render: (text, record) => {\n                return (\n                    <div>\n                        <Button onClick={() => {\n                            this.props.history.push({\n                                pathname: '/resource/edit-resource',\n                                state: {\n                                    resource: record,\n                                }\n                            });\n                        }}>编辑</Button>\n                        <Divider type=\"vertical\"/>\n                        <Button onClick={() => {\n                            Modal.confirm({\n                                title: '确认删除吗',\n                                content: '删除此资源所有关联的内容都会被删除',\n                                okText: '确认',\n                                cancelText: '取消',\n                                onOk: () => {\n                                    deleteResource(record.id).then(result => {\n                                        if (result && result.status === 1) {\n                                            message.success(result.msg);\n                                            this._loadData(this.state.pageNum, this.state.pageSize);\n                                        } else {\n                                            message.error('删除失败');\n                                        }\n                                    }).catch(() => {\n                                        message.error('删除失败');\n                                    });\n                                }\n                            });\n                        }}>删除</Button>\n                    </div>\n                );\n            }\n        },\n    ];\n\n    render() {\n        // 添加按钮\n        let AddBtn = (\n            <Button type={\"primary\"} onClick={() => {\n                this.props.history.push('/resource/add-resource');\n            }}>添加幼教资源</Button>\n        );\n        return (\n            <div>\n                <Card title={\"幼教资源列表\"} extra={AddBtn}>\n                    <Table rowKey={'id'} columns={this.columns} dataSource={this.state.resourceList} pagination={{\n                        total: this.state.totalSize,\n                        pageSize: this.state.pageSize,\n                        onChange: (pageNum, pageSize) => {\n                            this._loadData(pageNum, pageSize);\n                        }\n                    }}>\n                    </Table>\n                </Card>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport {Card, Form, Input, Select, Upload, message, Button, Divider, Switch} from 'antd';\nimport {InboxOutlined} from '@ant-design/icons';\nimport Moment from 'moment';\n\nimport LikeUploadImg from \"../../../components/LikeUploadImg\";\nimport config from \"../../../config/config\";\nimport {\n    getResourceArea,\n    getResourceCategory,\n    getResourceClasses,\n    getResourceFormat,\n    getResourceMate,\n    getFileList,\n    editResource,\n} from \"../../../api/resourceApi\";\nimport {getUser} from \"../../../api/adminApi\";\n\nconst {Item} = Form;\nconst {Option} = Select;\nconst {Dragger} = Upload;\n\nexport default class EditResource extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageUrl: '',\n            focusImgUrl: '',\n            resource_id: '',\n            tag: '',\n            dragFileList: [],   // 存放上传文件,\n            resource_category: [],\n            resource_classes: [],\n            resource_format: [],\n            resource_mate: [],\n            resource_area: [],\n        };\n        this.resourceFormRef = React.createRef();\n    }\n\n    componentDidMount() {\n        if (!this.props.location.state) {\n            this.setState = () => false;\n            this.props.history.goBack();\n        }\n        // 获取上一个界面的值\n        if (this.props.location.state) {\n            const resourceItem = this.props.location.state.resource;\n            if (resourceItem) {\n                const {resource_img, focus_img, id, resource_content} = resourceItem;\n                this.resourceFormRef.current.setFieldsValue(resourceItem);\n                this.setState({\n                    imageUrl: resource_img,\n                    focusImgUrl: focus_img,\n                    resource_id: id,\n                    tag: resource_content,\n                });\n                // 获取文件列表\n                getFileList(resourceItem.resource_content).then(result => {\n                    this.setState({dragFileList: result.data});\n                }).catch(error => {\n                    console.log(error);\n                });\n            }\n        }\n        getResourceCategory().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    resource_category: result.data,\n                });\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n        getResourceArea().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    resource_area: result.data,\n                });\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n        getResourceClasses().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    resource_classes: result.data,\n                });\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n        getResourceFormat().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    resource_format: result.data,\n                });\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n        getResourceMate().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    resource_mate: result.data,\n                });\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        const {imageUrl, focusImgUrl, resource_category, resource_classes, resource_area, resource_format, resource_mate} = this.state;\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 4},\n            },\n            wrapperCol: {\n                xs: {span: 12},\n            }\n        };\n        const onFinish = (values) => {\n            const {resource_id, imageUrl, focusImgUrl, dragFileList, tag} = this.state;\n            let {resource_name, resource_author, resource_category_id, resource_classes_id, resource_area_id, resource_mate_id, resource_format_id, resource_price, is_focus} = values;\n            if (!imageUrl) return message.warn('请上传活动封面');\n            // 生成创建日期\n            const resource_publish_time = Moment(new Date()).format('YYYY-MM-DD HH:mm:ss');\n            editResource(\n                getUser().token,\n                resource_id,\n                tag,\n                resource_name,\n                resource_author,\n                resource_publish_time,\n                dragFileList, // resource_content,\n                resource_category_id,\n                resource_classes_id,\n                resource_area_id,\n                resource_mate_id,\n                resource_format_id,\n                imageUrl,\n                resource_price,\n                is_focus ? 1 : 0,\n                focusImgUrl,\n            ).then(result => {\n                console.log(result);\n                if (result?.status === 1) {\n                    message.success('修改资源成功');\n                    this.props.history.goBack();\n                }\n            }).catch(() => {\n                message.error('修改资源失败');\n            });\n        };\n        return (\n            <Card title={\"编辑幼教资源\"}>\n                <Form {...formItemLayout} onFinish={onFinish} ref={this.resourceFormRef}>\n                    <Item label={\"资源名称\"} name={\"resource_name\"} rules={[{required: true, message: '请输入资源名称'}]}>\n                        <Input/>\n                    </Item>\n                    <Item label={\"资源作者\"} name={\"resource_author\"} rules={[{required: true, message: '请输入作者姓名'}]}>\n                        <Input/>\n                    </Item>\n                    <Item label={\"所属分类\"} name={\"resource_category_id\"} rules={[{required: true, message: '请选择所属分类'}]}>\n                        <Select style={{width: 200}} placeholder={\"请选择所属分类\"}>\n                            {resource_category.map(item => {\n                                return (<Option key={item.id} value={item.id}>{item.category_name}</Option>);\n                            })}\n                        </Select>\n                    </Item>\n                    <Item label={\"所属班级\"} name={\"resource_classes_id\"} rules={[{required: true, message: '请选择所属班级'}]}>\n                        <Select style={{width: 200}} placeholder={\"请选择所属班级\"}>\n                            {resource_classes.map(item => {\n                                return (<Option key={item.id} value={item.id}>{item.classes_name}</Option>);\n                            })}\n                        </Select>\n                    </Item>\n                    <Item label={\"所属领域\"} name={\"resource_area_id\"} rules={[{required: true, message: '请选择所属领域'}]}>\n                        <Select style={{width: 200}} placeholder={\"请选择所属领域\"}>\n                            {resource_area.map(item => {\n                                return (<Option key={item.id} value={item.id}>{item.area_name}</Option>);\n                            })}\n                        </Select>\n                    </Item>\n                    <Item label={\"素材选择\"} name={\"resource_mate_id\"} rules={[{required: true, message: '请选择所属素材'}]}>\n                        <Select style={{width: 200}} placeholder={\"请选择所属领域\"}>\n                            {resource_mate.map(item => {\n                                return (<Option key={item.id} value={item.id}>{item.mate_name}</Option>);\n                            })}\n                        </Select>\n                    </Item>\n                    <Item label={\"格式选择\"} name={\"resource_format_id\"} rules={[{required: true, message: '请选择素材格式'}]}>\n                        <Select style={{width: 200}} placeholder={\"请选择素材格式\"}>\n                            {resource_format.map(item => {\n                                return (<Option key={item.id} value={item.id}>{item.format_name}</Option>);\n                            })}\n                        </Select>\n                    </Item>\n                    <Item label={\"资源价格\"} name={\"resource_price\"} rules={[{required: true, message: '请输入资源价格'}]}>\n                        <Input type={\"number\"} style={{width: 120}}/>\n                    </Item>\n                    <Item label={\"资源封面图\"} name={\"resource_img\"}>\n                        <LikeUploadImg upLoadName={\"resource_upload_img\"}\n                                       upLoadImg={imageUrl ? config.BASE_URL + imageUrl : ''}\n                                       upLoadAction={\"/api/auth/resource/upload_resource\"}\n                                       upLoadBtnTitle={\"上传封面\"} successCallBack={(name) => {\n                            this.setState({imageUrl: name});\n                        }}/>\n                    </Item>\n                    <Item label={\"首页轮播图\"} name={\"focus_img\"}>\n                        <LikeUploadImg upLoadName={\"resource_upload_img\"}\n                                       upLoadImg={focusImgUrl ? config.BASE_URL + focusImgUrl : ''}\n                                       upLoadAction={\"/api/auth/resource/upload_resource\"}\n                                       upLoadBtnTitle={\"上传焦点图\"} successCallBack={(name) => {\n                            this.setState({focusImgUrl: name});\n                        }}/>\n                    </Item>\n                    <Item label={\"是否设置焦点\"} name={\"is_focus\"} valuePropName={\"checked\"}>\n                        <Switch checkedChildren=\"是\" unCheckedChildren=\"否\" disabled={!focusImgUrl}/>\n                    </Item>\n                    <Item label={\"幼教资源\"} name={\"resource_content\"} valuePropName={\"filelist\"}>\n                        <Dragger\n                            name={\"resource_file\"}\n                            multiple={true}\n                            action={\"/api/auth/resource/upload_many_file\"}\n                            fileList={this.state.dragFileList}\n                            onChange={info => {\n                                const {status} = info.file;\n                                if (status !== 'uploading') {\n                                    // console.log(info.file, info.fileList);\n                                }\n                                if (status === 'done') {\n                                    if (info.file.response && info.file.response.status === 1) {\n                                        const dragFileList = this.state.dragFileList;\n                                        dragFileList.push(info.file.response.data);\n                                        this.setState({dragFileList});\n                                    }\n                                    message.success(`${info.file.name} 文件上传成功!`);\n                                } else if (status === 'error') {\n                                    message.error(`${info.file.name} 文件上传失败!`);\n                                }\n                            }}\n                            onRemove={(info) => {\n                                let dragFileList = this.state.dragFileList;\n                                dragFileList = dragFileList.filter(item => {\n                                    return item.uid !== info.uid;\n                                });\n                                this.setState({dragFileList});\n                            }}\n                        >\n                            <p className=\"ant-upload-drag-icon\"><InboxOutlined/></p>\n                            <p className=\"ant-upload-text\">单击或者拖动文件到此区域上传</p>\n                            <p className=\"ant-upload-hint\">支持单个或多个文件上传</p>\n                        </Dragger>\n                    </Item>\n                    <Item wrapperCol={{span: 20}}>\n                        <div style={{textAlign: 'center', marginTop: 30}}>\n                            <Button type={\"primary\"} htmlType={\"submit\"}>修改</Button>\n                            <Divider type={\"vertical\"}/>\n                            <Button onClick={() => this.props.history.goBack()}>取消</Button>\n                        </div>\n                    </Item>\n                </Form>\n            </Card>\n        );\n    }\n}\n","import React from \"react\";\nimport {Switch, Route} from 'react-router-dom';\nimport AddResource from \"./pages/add-resource\";\nimport ResourceList from \"./pages/resource-list\";\nimport NotFound from \"../notFound/not-found\";\nimport EditResource from \"./pages/edit-resource\";\n\nexport default class Resource extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route path={\"/resource/add-resource\"} component={AddResource}/>\n                <Route path={\"/resource/edit-resource\"} component={EditResource}/>\n                <Route path={\"/resource\"} component={ResourceList}/>\n                <Route component={NotFound}/>\n            </Switch>\n        );\n    }\n}\n","import ajax from './index';\n\n/*\n*   1. 获取学前所属分类\n* */\nexport const getJobPre = () => ajax('/api/auth/lifejob/job_pre');\n/*\n*   2. 获取所属家园\n* */\nexport const getJobFamily = () => ajax('/api/auth/lifejob/job_family');\n/*\n*   3. 添加职场人生\n* */\nexport const addJob = (\n    token,\n    job_name,\n    job_img,\n    job_author,\n    job_time,\n    job_content,\n    job_pre_edu_id,\n    job_family_edu_id,\n    is_focus,\n    focus_img,\n) => ajax('/api/auth/lifejob/add', {\n    token,\n    job_name,\n    job_img,\n    job_author,\n    job_time,\n    job_content,\n    job_pre_edu_id,\n    job_family_edu_id,\n    is_focus,\n    focus_img,\n}, 'post');\n/*\n*   4. 获取人生列表\n* */\nexport const getJobList = (page_num, page_size) => ajax('/api/auth/lifejob/list', {page_num, page_size});\n/*\n*   5. 设置是否轮播图\n* */\nexport const setFocusJob = (id, is_focus) => ajax('/api/auth/lifejob/set_focus_job', {id, is_focus});\n/*\n*   6. 删除直播课程\n* */\nexport const deleteJob = (id) => ajax('/api/auth/lifejob/delete_job', {id});\n/*\n*   7. 修改职场人生\n* */\nexport const editJob = (\n    token,\n    id,\n    job_name,\n    job_img,\n    job_author,\n    job_time,\n    job_content,\n    job_pre_edu_id,\n    job_family_edu_id,\n    is_focus,\n    focus_img\n) => ajax('/api/auth/lifejob/edit', {\n    token,\n    id,\n    job_name,\n    job_img,\n    job_author,\n    job_time,\n    job_content,\n    job_pre_edu_id,\n    job_family_edu_id,\n    is_focus,\n    focus_img\n}, 'post');\n","import React from \"react\";\nimport {Card, Button, Table, Switch, Divider, Modal, message, notification} from 'antd';\nimport config from \"../../../config/config\";\nimport {deleteJob, getJobList, setFocusJob} from \"../../../api/lifejobApi\";\nimport {saveObj} from \"../../../tools/cache-tool\";\n\nexport default class LifeList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lifeList: [],\n            totalSize: 0,\n            pageSize: 4,\n        };\n    }\n\n    componentDidMount() {\n        this._loadData();\n    }\n\n    _loadData = (page_num = 1, page_size = 4) => {\n        getJobList(page_num, page_size).then(result => {\n            if (result && result.status === 1) {\n                message.success(result.msg);\n                this.setState({\n                    lifeList: result.data.job_list,\n                    totalSize: result.data.job_count,\n                });\n            }\n        }).catch(() => {\n            message.error('获取人生列表失败');\n        });\n    };\n    // 列的配置信息\n    columns = [\n        {title: 'ID', dataIndex: 'id', width: 50, align: 'center'},\n        {title: '幼教标题', dataIndex: 'job_name', align: 'center'},\n        {\n            title: '人生封面', dataIndex: 'job_img', render: (text) => {\n                return (\n                    <img src={text ? config.BASE_URL + text : ''} alt=\"人生封面\" style={{width: 100}}/>\n                );\n            }, align: 'center'\n        },\n        {title: '所属作者', dataIndex: 'job_author', align: 'center'},\n        {\n            title: '首页焦点', dataIndex: 'is_focus', render: (text, record) => {\n                return (\n                    <Switch checkedChildren={\"是\"} unCheckedChildren={\"否\"} defaultChecked={text === 1}\n                            disabled={!record.focus_img} onChange={checked => {\n                        setFocusJob(record.id, checked ? 1 : 0).then(result => {\n                            if (result && result.status === 1) {\n                                notification['success']({\n                                    message: `职场人生:${record.job_name}`,\n                                    description: `${checked ? '设置为' : '取消'}焦点课程`,\n                                });\n                                record.is_focus = checked ? 1 : 0;\n                            }\n                        });\n                    }}/>\n                );\n            }, align: 'center'\n        },\n        {\n            title: '操作', align: 'center', render: (text, record) => {\n                return (\n                    <div>\n                        <Button onClick={() => {\n                            // 本地存储一个tag\n                            saveObj('lifejob_tag', 'edit');\n                            this.props.history.push({\n                                pathname: '/lifejob/add-edit',\n                                state: {\n                                    job: record,\n                                }\n                            });\n                        }}>编辑</Button>\n                        <Divider type=\"vertical\"/>\n                        <Button onClick={() => {\n                            Modal.confirm({\n                                title: '确认删除吗',\n                                content: '删除此资源所有关联的内容都会被删除',\n                                okText: '确认',\n                                cancelText: '取消',\n                                onOk: () => {\n                                    deleteJob(record.id).then(result => {\n                                        if (result && result.status === 1) {\n                                            message.success(result.msg);\n                                            this._loadData(this.state.pageNum, this.state.pageSize);\n                                        } else {\n                                            message.error('删除失败');\n                                        }\n                                    }).catch(() => {\n                                        message.error('删除失败');\n                                    });\n                                }\n                            });\n                        }}>删除</Button>\n                    </div>\n                );\n            }\n        },\n    ];\n\n    render() {\n        // 添加按钮\n        let AddBtn = (\n            <Button type={\"primary\"} onClick={() => {\n                // 本地存储一个tag\n                saveObj('lifejob_tag', 'add');\n                this.props.history.push('/lifejob/add-edit');\n            }}>添加人生资源</Button>\n        );\n        return (\n            <div>\n                <Card title={\"职场人生列表\"} extra={AddBtn}>\n                    <Table rowKey={'id'} columns={this.columns} dataSource={this.state.lifeList} pagination={{\n                        total: this.state.totalSize,\n                        pageSize: this.state.pageSize,\n                        onChange: (pageNum, pageSize) => {\n                            this._loadData(pageNum, pageSize);\n                        }\n                    }}>\n                    </Table>\n                </Card>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// 引入编辑器组件\nimport BraftEditor from 'braft-editor';\n// 引入编辑器样式\nimport 'braft-editor/dist/index.css';\nimport {Upload, Button} from \"antd\";\nimport {ContentUtils} from 'braft-utils'\nimport config from \"../config/config\";\n\nexport default class RichTextEditor extends React.Component {\n    static propTypes = {\n        uploadName: PropTypes.string.isRequired,\n        upLoadAction: PropTypes.string.isRequired,\n        htmlContent: PropTypes.string,\n    };\n    state = {\n        // 创建一个空的editorState作为初始值\n        editorState: BraftEditor.createEditorState(null)\n    };\n    UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.htmlContent) {\n            this.setState({\n                editorState: BraftEditor.createEditorState(nextProps.htmlContent),\n            });\n        }\n    }\n\n    getContent = () => {\n        return this.state.editorState.toHTML();\n    };\n    submitContent = async () => {\n        // 在编辑器获得焦点时按下ctrl+s会执行此方法\n        // 编辑器内容提交到服务端之前，可直接调用editorState.toHTML()来获取HTML格式的内容\n        // const htmlContent = this.state.editorState.toHTML()\n        // const result = await saveEditorContent(htmlContent)\n    };\n\n    handleEditorChange = (editorState) => {\n        this.setState({editorState})\n    };\n    editorControls = [\n        'undo', 'redo', 'separator',\n        'font-size', 'line-height', 'letter-spacing', 'separator',\n        'text-color', 'bold', 'italic', 'underline', 'strike-through', 'separator',\n        'superscript', 'subscript', 'remove-styles', 'emoji', 'separator', 'text-indent', 'text-align', 'separator',\n        'headings', 'list-ul', 'list-ol', 'blockquote', 'code', 'separator',\n        'link', 'separator', 'hr', 'separator', 'separator', 'clear'\n    ];\n    uploadHandler = (info) => {\n        if (info.file.status === 'uploading') {\n            this.setState({loading: true});\n            return;\n        }\n        if (info.file.response && info.file.status === 'done' && info.file.response.status === 1) {\n            const name = info.file.response.data.name;\n            this.setState({\n                editorState: ContentUtils.insertMedias(this.state.editorState, [{\n                    type: 'IMAGE',\n                    url: config.BASE_URL + name,\n                }]),\n            });\n        }\n    };\n    extendControls = [\n        {\n            key: 'antd-uploader', // 控件唯一标识，必传\n            type: 'component',\n            component: (\n                <Upload action={this.props.upLoadAction} name={this.props.uploadName} onChange={this.uploadHandler} showUploadList={false}>\n                    <Button type={\"button\"} className={\"control-item button upload-button\"}\n                            data-title={\"插入图片\"}>插入图片</Button>\n                </Upload>\n            )\n        }\n    ];\n\n    render() {\n        const {editorState} = this.state;\n        return (\n            <div className=\"my-component\">\n                <BraftEditor\n                    controls={this.editorControls}\n                    extendControls={this.extendControls}\n                    value={editorState}\n                    onChange={this.handleEditorChange}\n                    onSave={this.submitContent}\n                    style={{border: '1px solid lightgray'}}\n                />\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport {Card, Form, Input, Select, Button, Divider, message, Switch} from 'antd';\nimport Moment from \"moment\";\n\n\nimport LikeUploadImg from \"../../../components/LikeUploadImg\";\nimport RichTextEditor from \"../../../components/rich-text-editor\";\nimport {getJobPre, getJobFamily, addJob, editJob} from \"../../../api/lifejobApi\";\nimport config from \"../../../config/config\";\nimport {getUser} from \"../../../api/adminApi\";\nimport {getObj} from \"../../../tools/cache-tool\";\n\nconst {Item} = Form;\nconst {Option} = Select;\n\nexport default class AddEditLife extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // 页面渲染使用\n            job_pre: [],\n            job_family: [],\n            // form数据\n            id: '',\n            job_content: '',\n            imageUrl: '',\n            focusImgUrl: '',\n        };\n        this.lifejobFormRef = React.createRef();\n        this.lifejob_ref = React.createRef();\n    }\n\n    componentDidMount() {\n        // 0.刷新页面处理\n        if (getObj('lifejob_tag') === 'edit' && !this.props.location.state) {\n            this.props.history.goBack();\n        }\n        // 1. 获取上一个界面传递的数据\n        if (this.props.location.state) {\n            const jobItem = this.props.location.state.job;\n            if (jobItem) {\n                this.lifejobFormRef.current.setFieldsValue(jobItem);\n                this.setState({\n                    id: jobItem.id,\n                    job_content: jobItem.job_content,\n                    imageUrl: jobItem.job_img,\n                    focusImgUrl: jobItem.focus_img,\n                });\n            }\n        }\n        getJobPre().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    job_pre: result.data,\n                });\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n        getJobFamily().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    job_family: result.data,\n                });\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    // 销毁组件前清空state内存\n    componentWillUnmount() {\n        this.setState = (state, callback) => {\n            return false;\n        }\n    }\n\n    render() {\n        const {imageUrl, focusImgUrl, job_pre, job_family, id} = this.state;\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 4},\n            },\n            wrapperCol: {\n                xs: {span: 12},\n            }\n        };\n        const onFinish = (values) => {\n            const {imageUrl, focusImgUrl} = this.state;\n            if (!imageUrl) return message.warn('请上传活动封面');\n            let {\n                job_name,\n                job_author,\n                job_pre_edu_id,\n                job_family_edu_id,\n                is_focus,\n            } = values;\n            let job_time = Moment(new Date()).format('YYYY-MM-DD HH:mm:ss');\n            // 获取富文本中的内容\n            let job_content = this.lifejob_ref.current.getContent();\n            // 调用添加活动API\n            if (id) {\n                editJob(\n                    getUser().token,\n                    id,\n                    job_name,\n                    imageUrl,\n                    job_author,\n                    job_time,\n                    job_content,\n                    job_pre_edu_id,\n                    job_family_edu_id,\n                    is_focus ? '1' : '0',\n                    focusImgUrl,\n                ).then(result => {\n                    if (result?.status === 1) {\n                        message.success('修改职场人生成功');\n                        this.props.history.goBack();\n                    }\n                }).catch(() => {\n                    message.error('修改职场人生失败');\n                });\n            } else {\n                addJob(\n                    getUser().token,\n                    job_name,\n                    imageUrl,\n                    job_author,\n                    job_time,\n                    job_content,\n                    job_pre_edu_id,\n                    job_family_edu_id,\n                    is_focus ? 1 : 0,\n                    focusImgUrl,\n                ).then(result => {\n                    if (result?.status === 1) {\n                        message.success('添加职场人生成功');\n                        this.props.history.goBack();\n                    }\n                }).catch(() => {\n                    message.error('添加职场人生失败');\n                });\n            }\n        };\n        return (\n            <Card title={getObj('lifejob_tag') === 'add' ? \"新增职场人生\" : \"编辑人生资源\"}>\n                <Form {...formItemLayout} onFinish={onFinish} ref={this.lifejobFormRef}>\n                    <Item label={\"人生名称\"} name={\"job_name\"} rules={[{required: true, message: '请输入职场人生名称'}]}>\n                        <Input/>\n                    </Item><Item label={\"人生作者\"} name={\"job_author\"} rules={[{required: true, message: '请输入职场人生作者'}]}>\n                    <Input/>\n                </Item>\n                    <Item label={\"学前所属分类\"} name={\"job_pre_edu_id\"} rules={[{required: true, message: '请选择学前所属分类'}]}>\n                        <Select style={{width: 200}} placeholder={\"请选择学前所属分类\"}>\n                            {job_pre.map(item => (\n                                <Option key={item.id} value={item.id}>{item.pre_edu_name}</Option>\n                            ))}\n                        </Select>\n                    </Item>\n                    <Item label={\"所属家园分类\"} name={\"job_family_edu_id\"} rules={[{required: true, message: '请选择所属家园分类'}]}>\n                        <Select style={{width: 200}} placeholder={\"请选择所属家园分类\"}>\n                            {job_family.map(item => (\n                                <Option key={item.id} value={item.id}>{item.job_family_name}</Option>\n                            ))}\n                        </Select>\n                    </Item>\n                    <Item label={\"人生封面图\"} name={\"job_img\"}>\n                        <LikeUploadImg upLoadBtnTitle={\"上传封面图\"} upLoadName={\"lifejob_img\"}\n                                       upLoadAction={\"/api/auth/lifejob/upload_lifejob\"}\n                                       upLoadImg={imageUrl ? config.BASE_URL + imageUrl : ''}\n                                       successCallBack={(name) => {\n                                           this.setState({imageUrl: name})\n                                       }}/>\n                    </Item>\n                    <Item label={\"焦点图\"} name={\"focus_img\"}>\n                        <LikeUploadImg upLoadBtnTitle={\"上传焦点图\"} upLoadName={\"lifejob_img\"}\n                                       upLoadAction={\"/api/auth/lifejob/upload_lifejob\"}\n                                       upLoadImg={focusImgUrl ? config.BASE_URL + focusImgUrl : ''}\n                                       successCallBack={(name) => {\n                                           this.setState({focusImgUrl: name})\n                                       }}/>\n                    </Item>\n                    <Item label={\"是否设置焦点\"} name={\"is_focus\"} valuePropName={\"checked\"}>\n                        <Switch checkedChildren=\"是\" unCheckedChildren=\"否\" disabled={!focusImgUrl}/>\n                    </Item>\n                    <Item label={\"职场人生内容\"} name={\"job_content\"} wrapperCol={{span: 20}}>\n                        <RichTextEditor uploadName={\"lifejob_img\"} upLoadAction={\"/api/auth/lifejob/upload_lifejob\"}\n                                        htmlContent={this.state.job_content}\n                                        ref={this.lifejob_ref}/>\n                    </Item>\n                    <Item wrapperCol={{span: 20}}>\n                        <div style={{textAlign: 'center', marginTop: 30}}>\n                            <Button type={\"primary\"}\n                                    htmlType={\"submit\"}>{getObj('lifejob_tag') === 'add' ? \"添加\" : \"修改\"}</Button>\n                            <Divider type={\"vertical\"}/>\n                            <Button onClick={() => this.props.history.goBack()}>取消</Button>\n                        </div>\n                    </Item>\n\n                </Form>\n            </Card>\n        );\n    }\n}\n","import React from \"react\";\nimport {Switch, Route} from 'react-router-dom';\n\nimport LifeList from \"./pages/life-list\";\nimport AddEditLife from \"./pages/add-edit-life\";\nimport NotFound from \"../notFound/not-found\";\n\nexport default class LifeJob extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route path={\"/lifejob/add-edit\"} component={AddEditLife}/>\n                <Route path={\"/lifejob\"} component={LifeList}/>\n                <Route component={NotFound}/>\n            </Switch>\n        );\n    }\n}\n","import ajax from './index';\n\n/*\n*   1. 获取直播主题\n* */\nexport const getLiveTheme = () => ajax('/api/auth/live/live_theme');\n/*\n*   2. 获取使用人群\n* */\nexport const getLivePerson = () => ajax('/api/auth/live/live_person');\n/*\n*   3. 添加直播课程\n* */\nexport const addLive = (token, live_title, live_author, live_img, live_begin_time, live_end_time, live_price, live_person_id, live_theme_id, is_focus, focus_img, live_url) => ajax('/api/auth/live/add',{token, live_title, live_author, live_img, live_begin_time, live_end_time, live_price, live_person_id, live_theme_id, is_focus, focus_img, live_url},'post');\n/*\n*   4. 获取直播课程列表\n* */\nexport const getLive = (page_num,page_size) => ajax('/api/auth/live/list',{page_num,page_size});\n/*\n*   5. 设置是否轮播图\n* */\nexport const setFocusLive = (id,is_focus) => ajax('/api/auth/live/set_focus_live',{id,is_focus});\n/*\n*   6. 删除直播课程\n* */\nexport const deleteLive = (id) => ajax('/api/auth/live/delete_live',{id});\n/*\n*   7. 修改一条直播课\n* */\nexport const editLive = (token, id, live_title, live_author, live_img, live_begin_time, live_end_time, live_price, live_person_id, live_theme_id, is_focus, focus_img, live_url) => ajax('/api/auth/live/edit',{token, id, live_title, live_author, live_img, live_begin_time, live_end_time, live_price, live_person_id, live_theme_id, is_focus, focus_img, live_url},'post');\n","import React from \"react\";\nimport {Card, Form, Input, Select, Button, Divider, DatePicker, message, Switch} from 'antd';\nimport Moment from \"moment\";\n\nimport LikeUploadImg from \"../../../components/LikeUploadImg\";\nimport config from \"../../../config/config\";\nimport {addLive, getLivePerson, getLiveTheme} from '../../../api/liveApi';\nimport {getUser} from \"../../../api/adminApi\";\n\nconst {Item} = Form;\nconst {Option} = Select;\nconst {RangePicker} = DatePicker;\n\n\nexport default class AddLive extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageUrl: '',\n            focusImgUrl: '',\n            live_theme: [],\n            live_person: [],\n        }\n    }\n\n    componentDidMount() {\n        getLivePerson().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    live_person: result.data,\n                });\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n        getLiveTheme().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    live_theme: result.data,\n                });\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        const {imageUrl, focusImgUrl, live_person, live_theme} = this.state;\n        const formItemLayout = {\n            labelCol: {xs: {span: 4},},\n            wrapperCol: {xs: {span: 12},}\n        }\n\n        const onFinish = (values) => {\n            console.log(values);\n            const {imageUrl, focusImgUrl} = this.state;\n            const {live_title, live_author, live_price, live_person_id, live_theme_id, is_focus, live_url} = values;\n            if (!imageUrl) return message.warning('请上传直播封面');\n            // 开始时间和结束时间\n            const live_begin_time = Moment(values.live_time[0]).format('YYYY-MM-DD HH:mm:ss');\n            const live_end_time = Moment(values.live_time[1]).format('YYYY-MM-DD HH:mm:ss');\n            // 调用接口\n            addLive(getUser().token, live_title, live_author, imageUrl, live_begin_time, live_end_time, live_price, live_person_id, live_theme_id, is_focus ? 1 : 0, focusImgUrl, live_url).then(result=>{\n                if (result && result.status === 1) {\n                    message.success(result.msg);\n                    this.props.history.goBack();\n                }\n            }).catch(()=>{\n                message.error('添加直播课失败');\n            })\n\n        }\n        return (\n            <Card title={\"新增直播\"}>\n                <Form {...formItemLayout} onFinish={onFinish}>\n                    <Item label={\"直播名称\"} name={\"live_title\"} rules={[{required: true, message: '请输入直播名称'}]}>\n                        <Input/>\n                    </Item>\n                    <Item label={\"直播老师\"} name={\"live_author\"} rules={[{required: true, message: '请输入直播老师'}]}>\n                        <Input/>\n                    </Item>\n                    <Item label={\"直播价格\"} name={\"live_price\"} rules={[{required: true, message: '请输入直播价格'}]}>\n                        <Input type={\"number\"}/>\n                    </Item>\n                    <Item label={\"直播时间\"} name={\"live_time\"} rules={[{required: true, message: '请选择直播时间'}]}>\n                        <RangePicker showTime/>\n                    </Item>\n                    <Item wrapperCol={{span: 5}} label={\"适用人群\"} name={\"live_person_id\"}\n                          rules={[{required: true, message: '请选择适用人群'}]}>\n                        <Select placeholder={\"请选择适用人群\"}>\n                            {live_person.map(item => {\n                                return (\n                                    <Option value={item.id} key={item.id}>{item.live_person_name}</Option>\n                                );\n                            })}\n                        </Select>\n                    </Item>\n                    <Item wrapperCol={{span: 5}} label={\"内容主题\"} name={\"live_theme_id\"}\n                          rules={[{required: true, message: '请选择内容主题'}]}>\n                        <Select placeholder={\"请选择内容主题\"}>\n                            {live_theme.map(item => {\n                                return (\n                                    <Option value={item.id} key={item.id}>{item.live_theme_title}</Option>\n                                );\n                            })}\n                        </Select>\n                    </Item>\n                    <Item label={\"直播地址\"} name={\"live_url\"} rules={[{required: true, message: '请输入直播地址'}]}>\n                        <Input/>\n                    </Item>\n                    <Item label={\"直播封面\"} name={\"live_img\"}>\n                        <LikeUploadImg upLoadBtnTitle={\"上传封面\"} upLoadName={\"live_img\"}\n                                       upLoadAction={\"/api/auth/live/upload_live\"}\n                                       upLoadImg={imageUrl ? config.BASE_URL + imageUrl : ''}\n                                       successCallBack={(name) => {\n                                           message.success('直播课程封面上传成功');\n                                           this.setState({imageUrl: name});\n                                       }}/>\n                    </Item>\n                    <Item label={\"首页封面\"} name={\"focus_img\"}>\n                        <LikeUploadImg upLoadBtnTitle={\"上传焦点图\"} upLoadName={\"live_img\"}\n                                       upLoadAction={\"/api/auth/live/upload_live\"}\n                                       upLoadImg={focusImgUrl ? config.BASE_URL + focusImgUrl : ''}\n                                       successCallBack={(name) => {\n                                           message.success('直播课程焦点图上传成功');\n                                           this.setState({focusImgUrl: name});\n                                       }}/>\n                    </Item>\n                    <Item label={\"是否设置焦点\"} name={\"is_focus\"} valuePropName={\"checked\"}>\n                        <Switch checkedChildren=\"是\" unCheckedChildren=\"否\" disabled={!focusImgUrl}/>\n                    </Item>\n                    <Item wrapperCol={{span: 20}}>\n                        <div style={{textAlign: 'center', marginTop: 30}}>\n                            <Button type={\"primary\"} htmlType=\"submit\">保存</Button>\n                            <Divider type={\"vertical\"}/>\n                            <Button onClick={() => this.props.history.goBack()}>取消</Button>\n                        </div>\n                    </Item>\n                </Form>\n            </Card>\n        );\n    }\n}\n","import React from \"react\";\nimport {Card, Button, Table, Switch, Divider, Modal, message, notification} from 'antd';\nimport {getLive, deleteLive, setFocusLive} from \"../../../api/liveApi\";\nimport config from \"../../../config/config\";\n\nexport default class LivesList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            liveList: [],\n            totalSize: 0,\n            pageSize: 4,\n            pageNum: 1,\n        }\n    }\n\n    componentDidMount() {\n        this._loadData();\n    }\n\n    _loadData = (page_num = 1, page_size = 4) => {\n        getLive(page_num, page_size).then(result => {\n            if (result && result.status === 1) {\n                message.success(result.msg);\n                this.setState({\n                    liveList: result.data.list,\n                    totalSize: result.data.live_count,\n                })\n            }\n        }).catch(() => {\n            message.error('获取直播课程失败');\n        });\n    };\n    // 列的配置信息\n    columns = [\n        {title: 'ID', dataIndex: 'id', width: 50, align: 'center'},\n        {title: '直播课标题', dataIndex: 'live_title', align: 'center'},\n        {\n            title: '直播封面', dataIndex: 'live_img', render: (text) => {\n                return (\n                    <img src={config.BASE_URL + text} alt=\"直播封面\" style={{width: 100}}/>\n                );\n            }, align: 'center'\n        },\n        {title: '开始时间', dataIndex: 'live_begin_time', align: 'center'},\n        {title: '直播老师', dataIndex: 'live_author', align: 'center'},\n        {title: '价格', dataIndex: 'live_price', align: 'center'},\n        {\n            title: '首页焦点', dataIndex: 'is_focus', align: 'center', render: (text, record) => {\n                return (\n                    <Switch checkedChildren={\"是\"} unCheckedChildren={record.focus_img ? '否' : '无'}\n                            defaultChecked={text === 1} disabled={!record.focus_img} onChange={(checked) => {\n                        setFocusLive(record.id, checked ? 1 : 0).then(result => {\n                            if (result && result.status === 1) {\n                                notification['success']({\n                                    message: `直播课程:${record.live_title}`,\n                                    description: `${checked ? '设置为' : '取消'}焦点课程`,\n                                });\n                                record.is_focus = checked ? 1 : 0;\n                            }\n                        });\n                    }}/>);\n            }\n        }, {\n            title: '操作', align: 'center', render: (text, record) => {\n                return (\n                    <div>\n                        <Button onClick={() => {\n                            this.props.history.push({\n                                pathname: '/live/edit-live',\n                                state: {\n                                    live: record\n                                }\n                            });\n                        }}>编辑</Button>\n                        <Divider type=\"vertical\"/>\n                        <Button onClick={() => {\n                            Modal.confirm({\n                                title: '确认删除吗',\n                                content: '删除此资源所有关联的内容都会被删除',\n                                okText: '确认',\n                                cancelText: '取消',\n                                onOk: () => {\n                                    deleteLive(record.id).then(result => {\n                                        if (result && result.status === 1) {\n                                            message.success(result.msg);\n                                            this._loadData(this.state.pageNum, this.state.pageSize);\n                                        } else {\n                                            message.error('删除失败');\n                                        }\n                                    }).catch(() => {\n                                        message.error('删除失败');\n                                    })\n                                }\n                            });\n                        }}>删除</Button>\n                    </div>\n                );\n            }\n        },\n    ];\n\n    render() {\n        // 添加按钮\n        let AddBtn = (\n            <Button type={\"primary\"} onClick={() => {\n                this.props.history.push('/live/add-live');\n            }}>添加直播</Button>\n        );\n        return (\n            <div>\n                <Card title={\"直播列表\"} extra={AddBtn}>\n                    <Table rowKey={'id'} columns={this.columns} dataSource={this.state.liveList} pagination={{\n                        total: this.state.totalSize,\n                        pageSize: this.state.pageSize,\n                        onChange: (pageNum, pageSize) => this._loadData(pageNum)\n                    }}>\n                    </Table>\n                </Card>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport {Card, Form, Input, Select, Button, Divider, DatePicker, message, Switch} from 'antd';\nimport Moment from \"moment\";\n\nimport LikeUploadImg from \"../../../components/LikeUploadImg\";\nimport config from \"../../../config/config\";\nimport {editLive, getLivePerson, getLiveTheme} from '../../../api/liveApi';\nimport {getUser} from \"../../../api/adminApi\";\n\nconst {Item} = Form;\nconst {Option} = Select;\nconst {RangePicker} = DatePicker;\n\n\nexport default class EditLive extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageUrl: '',\n            focusImgUrl: '',\n            live_theme: [],\n            live_person: [],\n            live_id: '',\n        };\n        // ref绑定表单\n        this.liveFormRef = React.createRef();\n    }\n\n    componentDidMount() {\n        if (this.props.location.state) {\n            const liveItem = this.props.location.state.live;\n            const {id, live_title, live_author, live_begin_time, live_end_time, live_url, live_price, live_person_id, live_theme_id, is_focus, live_img, focus_img} = liveItem;\n            if (liveItem) {\n                this.liveFormRef.current.setFieldsValue({\n                    live_title,\n                    live_author,\n                    live_time: [Moment(live_begin_time), Moment(live_end_time)],\n                    live_url,\n                    live_price,\n                    live_person_id,\n                    live_theme_id,\n                    is_focus: is_focus === 1,\n                });\n            }\n            this.setState({\n                imageUrl: live_img,\n                focusImgUrl: focus_img,\n                live_id: id\n            });\n        }\n        getLivePerson().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    live_person: result.data,\n                });\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n        getLiveTheme().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    live_theme: result.data,\n                });\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        const {imageUrl, focusImgUrl, live_person, live_theme} = this.state;\n        const formItemLayout = {\n            labelCol: {xs: {span: 4},},\n            wrapperCol: {xs: {span: 12},}\n        }\n\n        const onFinish = (values) => {\n            const {imageUrl, focusImgUrl, live_id} = this.state;\n            const {live_title, live_author, live_price, live_person_id, live_theme_id, is_focus, live_url} = values;\n            if (!imageUrl) return message.warning('请上传直播封面');\n            // 开始时间和结束时间\n            const live_begin_time = Moment(values.live_time[0]).format('YYYY-MM-DD HH:mm:ss');\n            const live_end_time = Moment(values.live_time[1]).format('YYYY-MM-DD HH:mm:ss');\n            // 调用接口\n            editLive(getUser().token, live_id, live_title, live_author, imageUrl, live_begin_time, live_end_time, live_price, live_person_id, live_theme_id, is_focus ? 1 : 0, focusImgUrl, live_url).then(result => {\n                if (result && result.status === 1) {\n                    message.success(result.msg);\n                    this.props.history.goBack();\n                }\n            }).catch(() => {\n                message.error('编辑直播课失败');\n            })\n\n        }\n        return (\n            <Card title={\"编辑直播课\"}>\n                <Form {...formItemLayout} onFinish={onFinish} ref={this.liveFormRef}>\n                    <Item label={\"直播名称\"} name={\"live_title\"} rules={[{required: true, message: '请输入直播名称'}]}>\n                        <Input/>\n                    </Item>\n                    <Item label={\"直播老师\"} name={\"live_author\"} rules={[{required: true, message: '请输入直播老师'}]}>\n                        <Input/>\n                    </Item>\n                    <Item label={\"直播价格\"} name={\"live_price\"} rules={[{required: true, message: '请输入直播价格'}]}>\n                        <Input type={\"number\"}/>\n                    </Item>\n                    <Item label={\"直播时间\"} name={\"live_time\"} rules={[{required: true, message: '请选择直播时间'}]}>\n                        <RangePicker showTime/>\n                    </Item>\n                    <Item wrapperCol={{span: 5}} label={\"适用人群\"} name={\"live_person_id\"}\n                          rules={[{required: true, message: '请选择适用人群'}]}>\n                        <Select placeholder={\"请选择适用人群\"}>\n                            {live_person.map(item => {\n                                return (\n                                    <Option value={item.id} key={item.id}>{item.live_person_name}</Option>\n                                );\n                            })}\n                        </Select>\n                    </Item>\n                    <Item wrapperCol={{span: 5}} label={\"内容主题\"} name={\"live_theme_id\"}\n                          rules={[{required: true, message: '请选择内容主题'}]}>\n                        <Select placeholder={\"请选择内容主题\"}>\n                            {live_theme.map(item => {\n                                return (\n                                    <Option value={item.id} key={item.id}>{item.live_theme_title}</Option>\n                                );\n                            })}\n                        </Select>\n                    </Item>\n                    <Item label={\"直播地址\"} name={\"live_url\"} rules={[{required: true, message: '请输入直播地址'}]}>\n                        <Input/>\n                    </Item>\n                    <Item label={\"直播封面\"} name={\"live_img\"}>\n                        <LikeUploadImg upLoadBtnTitle={\"上传封面\"} upLoadName={\"live_img\"}\n                                       upLoadAction={\"/api/auth/live/upload_live\"}\n                                       upLoadImg={imageUrl ? config.BASE_URL + imageUrl : ''}\n                                       successCallBack={(name) => {\n                                           message.success('直播课程封面上传成功');\n                                           this.setState({imageUrl: name});\n                                       }}/>\n                    </Item>\n                    <Item label={\"首页封面\"} name={\"focus_img\"}>\n                        <LikeUploadImg upLoadBtnTitle={\"上传焦点图\"} upLoadName={\"live_img\"}\n                                       upLoadAction={\"/api/auth/live/upload_live\"}\n                                       upLoadImg={focusImgUrl ? config.BASE_URL + focusImgUrl : ''}\n                                       successCallBack={(name) => {\n                                           message.success('直播课程焦点图上传成功');\n                                           this.setState({focusImgUrl: name});\n                                       }}/>\n                    </Item>\n                    <Item label={\"是否设置焦点\"} name={\"is_focus\"} valuePropName={\"checked\"}>\n                        <Switch checkedChildren=\"是\" unCheckedChildren=\"否\" disabled={!focusImgUrl}/>\n                    </Item>\n                    <Item wrapperCol={{span: 20}}>\n                        <div style={{textAlign: 'center', marginTop: 30}}>\n                            <Button type={\"primary\"} htmlType=\"submit\">修改</Button>\n                            <Divider type={\"vertical\"}/>\n                            <Button onClick={() => this.props.history.goBack()}>取消</Button>\n                        </div>\n                    </Item>\n                </Form>\n            </Card>\n        );\n    }\n}\n","import React from \"react\";\nimport {Switch,Route} from 'react-router-dom';\n\nimport NotFound from \"../notFound/not-found\";\nimport AddLive from \"./pages/add-live\";\nimport LivesList from \"./pages/lives-list\";\nimport EditLive from \"./pages/edit-live\";\nexport default class LifeJob extends React.Component{\n    render() {\n        return (\n            <Switch>\n                <Route path={\"/live/add-live\"} component={AddLive}/>\n                <Route path={\"/live/edit-live\"} component={EditLive}/>\n                <Route path={\"/live\"} component={LivesList}/>\n                <Route component={NotFound}/>\n            </Switch>\n        );\n    }\n}\n","import React from \"react\";\nimport {Tag, Input} from 'antd';\nimport {TweenOneGroup} from 'rc-tween-one';\nimport {PlusOutlined} from '@ant-design/icons';\nimport PropTypes from 'prop-types';\n\nexport default class LikeTag extends React.Component {\n    state = {\n        tags: [],\n        inputVisible: false,\n        inputValue: '',\n    };\n    static propTypes = {\n        tagsCallBack: PropTypes.func.isRequired,\n        tagsArr: PropTypes.array,\n    };\n    UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.tagsArr) {\n            this.setState({tags:nextProps.tagsArr})\n        }\n    }\n\n    handleClose = removedTag => {\n        const tags = this.state.tags.filter(tag => tag !== removedTag);\n        this.setState({tags});\n        // 返回标签数组\n        this.props.tagsCallBack(tags);\n    };\n\n    showInput = () => {\n        this.setState({inputVisible: true}, () => this.input.focus());\n    };\n\n    handleInputChange = e => {\n        this.setState({inputValue: e.target.value});\n    };\n\n    handleInputConfirm = () => {\n        const {inputValue} = this.state;\n        let {tags} = this.state;\n        if (inputValue && tags.indexOf(inputValue) === -1) {\n            tags = [...tags, inputValue];\n        }\n        this.setState({\n            tags,\n            inputVisible: false,\n            inputValue: '',\n        });\n        // 返回标签数组\n        this.props.tagsCallBack(tags);\n    };\n\n    saveInputRef = input => {\n        this.input = input;\n    };\n\n    forMap = tag => {\n        const tagElem = (\n            <Tag\n                closable\n                onClose={e => {\n                    e.preventDefault();\n                    this.handleClose(tag);\n                }}\n            >\n                {tag}\n            </Tag>\n        );\n        return (\n            <span key={tag} style={{display: 'inline-block'}}>\n        {tagElem}\n      </span>\n        );\n    };\n\n    render() {\n        const {tags, inputVisible, inputValue} = this.state;\n        const tagChild = tags.map(this.forMap);\n        return (\n            <>\n                <TweenOneGroup\n                    enter={{\n                        scale: 0.8,\n                        opacity: 0,\n                        type: 'from',\n                        duration: 100,\n                        onComplete: e => {\n                            e.target.style = '';\n                        },\n                    }}\n                    leave={{opacity: 0, width: 0, scale: 0, duration: 200}}\n                    appear={false}\n                >\n                    {tagChild}\n                </TweenOneGroup>\n                <div style={{marginBottom: 10, display: tags.length ? 'block' : 'none'}}/>\n                {inputVisible && (\n                    <Input\n                        ref={this.saveInputRef}\n                        type=\"text\"\n                        size=\"small\"\n                        style={{width: 78}}\n                        value={inputValue}\n                        onChange={this.handleInputChange}\n                        onBlur={this.handleInputConfirm}\n                        onPressEnter={this.handleInputConfirm}\n                    />\n                )}\n                {!inputVisible && (\n                    <Tag onClick={this.showInput} className=\"site-tag-plus\">\n                        <PlusOutlined/> 添加标签\n                    </Tag>\n                )}\n            </>\n        );\n    }\n}\n","import ajax from './index';\n\n/*\n*   1. 获取地址\n* */\nexport const getActivitiesAddress = () => ajax('/api/auth/activities/activities_address');\n/*\n*   2. 获取招收对象\n* */\nexport const getActivitiesObject = () => ajax('/api/auth/activities/activities_object');\n/*\n*   2. 获取营期\n* */\nexport const getActivitiesBus = () => ajax('/api/auth/activities/activities_bus');\n/*\n*   3. 添加活动\n* */\nexport const addActivities = (token, activities_name, activities_time, activities_img, activities_price, activities_tag, activities_count, activities_address_id, activities_object_id, activities_bus_day_id, activities_intro, activities_trip, activities_day, activities_notice, is_focus, focus_img) => ajax('/api/auth/activities/add',{token, activities_name, activities_time, activities_img, activities_price, activities_tag, activities_count, activities_address_id, activities_object_id, activities_bus_day_id, activities_intro, activities_trip, activities_day, activities_notice, is_focus, focus_img},'post');\n/*\n*   4. 获取活动列表\n* */\nexport const getActivitiesList = (page_num,page_size) => ajax('/api/auth/activities/list',{page_num,page_size});\n/*\n*   5. 设置是否轮播图\n* */\nexport const setFocusActivities = (id,is_focus) => ajax('/api/auth/activities/set_focus_activities',{id,is_focus});\n/*\n*   6. 删除直播课程\n* */\nexport const deleteActivities = (id) => ajax('/api/auth/activities/delete_activities',{id});\n/*\n*   7. 修改一条直播课\n* */\nexport const editActivities = (token, id, activities_name, activities_time, activities_img, activities_price, activities_tag, activities_count, activities_address_id, activities_object_id, activities_bus_day_id, activities_intro, activities_trip, activities_day, activities_notice, is_focus, focus_img) => ajax('/api/auth/activities/edit',{token, id, activities_name, activities_time, activities_img, activities_price, activities_tag, activities_count, activities_address_id, activities_object_id, activities_bus_day_id, activities_intro, activities_trip, activities_day, activities_notice, is_focus, focus_img},'post');\n","import React from \"react\";\nimport {Card, Form, Input, Button, Divider, DatePicker, Select, message, Switch} from 'antd';\nimport Moment from 'moment';\n\nimport RichTextEditor from \"../../../components/rich-text-editor\";\nimport LikeTag from '../../../components/LikeTag';\nimport LikeUploadImg from \"../../../components/LikeUploadImg\";\nimport config from \"../../../config/config\";\nimport {\n    getActivitiesAddress,\n    getActivitiesObject,\n    getActivitiesBus,\n    addActivities\n} from '../../../api/activitiesApi';\nimport {getUser} from \"../../../api/adminApi\";\n\nconst {Item} = Form;\nconst {Option} = Select;\n\nexport default class AddActivities extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageUrl: '',\n            focusImgUrl: '',\n            activities_address: [],\n            activities_object: [],\n            activities_bus: [],\n            tags: [],\n        };\n        this.activities_intro_ref = React.createRef();\n        this.activities_trip_ref = React.createRef();\n        this.activities_days_ref = React.createRef();\n        this.activities_notice_ref = React.createRef();\n    }\n\n    componentDidMount() {\n        getActivitiesBus().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    activities_bus: result.data,\n                });\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n        getActivitiesObject().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    activities_object: result.data,\n                });\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n        getActivitiesAddress().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    activities_address: result.data,\n                });\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 4},\n            },\n            wrapperCol: {\n                xs: {span: 12},\n            }\n        };\n        const {imageUrl, focusImgUrl, activities_address, activities_object, activities_bus} = this.state;\n        const onFinish = (values) => {\n            console.log(values);\n            const {imageUrl, focusImgUrl, tags} = this.state;\n            if (!imageUrl) return message.warn('请上传活动封面');\n            const activities_time = Moment(values.activities_time).format('YYYY-MM-DD HH:mm:ss');\n            const {activities_name, activities_price, activities_address_id, activities_object_id, activities_bus_day_id, activities_count, is_focus} = values;\n            let tagStr = tags.join(',');\n            // 获取富文本中的内容\n            let activities_intro = this.activities_intro_ref.current.getContent();\n            let activities_trip = this.activities_trip_ref.current.getContent();\n            let activities_day = this.activities_days_ref.current.getContent();\n            let activities_notice = this.activities_notice_ref.current.getContent();\n            console.log(activities_intro);\n            // 调用添加活动API\n            addActivities(getUser().token, activities_name, activities_time, imageUrl, activities_price, tagStr, activities_count, activities_address_id, activities_object_id, activities_bus_day_id, activities_intro, activities_trip, activities_day, activities_notice, is_focus ? 1 : 0, focusImgUrl).then(result=>{\n                console.log(result);\n                if (result?.status === 1) {\n                    message.success('添加活动成功');\n                    this.props.history.goBack();\n                }\n            }).catch(()=>{\n                message.error('添加活动失败');\n            })\n        };\n        return (\n            <Card title={\"新增活动\"}>\n                <Form {...formItemLayout} onFinish={onFinish}>\n                    <Item label={\"活动名称\"} name={\"activities_name\"} rules={[{required: true, message: '请输入活动名称'}]}>\n                        <Input/>\n                    </Item>\n                    <Item label={\"活动日期\"} name={\"activities_time\"} rules={[{required: true, message: '请选择活动日期'}]}>\n                        <DatePicker/>\n                    </Item>\n                    <Item label={\"活动价格\"} name={\"activities_price\"} rules={[{required: true, message: '请输入活动价格'}]}>\n                        <Input type={\"number\"}/>\n                    </Item>\n                    <Item label={\"报名人数\"} name={\"activities_count\"} rules={[{required: true, message: '请输入活动价格'}]}>\n                        <Input type={\"number\"}/>\n                    </Item>\n                    <Item label={\"活动地点\"} name={\"activities_address_id\"} rules={[{required: true, message: '请选择活动地点'}]}>\n                        <Select style={{width: 200}} placeholder={\"请选择活动地点\"}>\n                            {activities_address.map(item => (\n                                <Option key={item.id} value={item.id}>{item.activities_address}</Option>\n                            ))}\n                        </Select>\n                    </Item>\n                    <Item label={\"招生对象\"} name={\"activities_object_id\"} rules={[{required: true, message: '请选择招生对象'}]}>\n                        <Select style={{width: 200}} placeholder={\"请选择招生对象\"}>\n                            {activities_object.map(item => (\n                                <Option key={item.id} value={item.id}>{item.activities_object_name}</Option>\n                            ))}\n                        </Select>\n                    </Item>\n                    <Item label={\"选择营期\"} name={\"activities_bus_day_id\"} rules={[{required: true, message: '请选择营期'}]}>\n                        <Select style={{width: 200}} placeholder={\"请选择营期\"}>\n                            {activities_bus.map(item => (\n                                <Option key={item.id} value={item.id}>{item.activities_bus_day}</Option>\n                            ))}\n                        </Select>\n                    </Item>\n                    <Item label={\"活动标签\"}>\n                        <LikeTag tagsCallBack={(tags) => {\n                            this.setState({tags});\n                        }}/>\n                    </Item>\n                    <Item label={\"活动封面图\"} name={\"activities_img\"}>\n                        <LikeUploadImg upLoadBtnTitle={\"上传封面\"} upLoadName={\"activities_img\"}\n                                       upLoadAction={\"/api/auth/activities/upload_activities\"}\n                                       upLoadImg={imageUrl ? config.BASE_URL + imageUrl : ''}\n                                       successCallBack={(name) => {\n                                           message.success('活动封面上传成功');\n                                           this.setState({imageUrl: name});\n                                       }}/>\n                    </Item>\n                    <Item label={\"首页轮播图\"} name={\"focus_img\"}>\n                        <LikeUploadImg upLoadBtnTitle={\"上传焦点图\"} upLoadName={\"activities_img\"}\n                                       upLoadAction={\"/api/auth/activities/upload_activities\"}\n                                       upLoadImg={focusImgUrl ? config.BASE_URL + focusImgUrl : ''}\n                                       successCallBack={(name) => {\n                                           message.success('活动焦点图上传成功');\n                                           this.setState({focusImgUrl: name});\n                                       }}/>\n                    </Item>\n                    <Item label={\"是否设置焦点\"} name={\"is_focus\"} valuePropName={\"checked\"}>\n                        <Switch checkedChildren=\"是\" unCheckedChildren=\"否\" disabled={!focusImgUrl}/>\n                    </Item>\n                    <Item label={\"活动介绍\"} name={\"activities_intro\"} wrapperCol={{span: 20}}>\n                        <RichTextEditor ref={this.activities_intro_ref} upLoadAction={\"/api/auth/activities/upload_activities\"} uploadName={\"activities_img\"}/>\n                    </Item>\n                    <Item label={\"行程安排\"} name={\"activities_trip\"} wrapperCol={{span: 20}}>\n                        <RichTextEditor ref={this.activities_trip_ref} upLoadAction={\"/api/auth/activities/upload_activities\"} uploadName={\"activities_img\"}/>\n                    </Item>\n                    <Item label={\"开营日期\"} name={\"activities_days\"} wrapperCol={{span: 20}}>\n                        <RichTextEditor ref={this.activities_days_ref} upLoadAction={\"/api/auth/activities/upload_activities\"} uploadName={\"activities_img\"}/>\n                    </Item>\n                    <Item label={\"注意事项\"} name={\"activities_notice\"} wrapperCol={{span: 20}}>\n                        <RichTextEditor ref={this.activities_notice_ref} upLoadAction={\"/api/auth/activities/upload_activities\"} uploadName={\"activities_img\"}/>\n                    </Item>\n                    <Item wrapperCol={{span: 20}}>\n                        <div style={{textAlign: 'center', marginTop: 30}}>\n                            <Button type={\"primary\"} htmlType={\"submit\"}>保存</Button>\n                            <Divider type={\"vertical\"}/>\n                            <Button onClick={() => this.props.history.goBack()}>取消</Button>\n                        </div>\n                    </Item>\n                </Form>\n            </Card>\n        );\n    }\n}\n","import React from \"react\";\nimport {Card, Button, Table, Switch, Divider, Modal, message, notification} from 'antd';\nimport {deleteActivities, getActivitiesList, setFocusActivities} from \"../../../api/activitiesApi\";\nimport config from \"../../../config/config\";\n\nexport default class ActivitiesList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activitiesList: [],\n            totalSize: 0,\n            pageSize: 4,\n        }\n    }\n\n    componentDidMount() {\n        this._loadData();\n    }\n\n    _loadData = (page_num = 1, page_size = 4) => {\n        getActivitiesList(page_num, page_size).then(result => {\n            if (result && result.status === 1) {\n                message.success(result.msg);\n                this.setState({\n                    activitiesList: result.data.activities_list,\n                    totalSize: result.data.activities_count,\n                })\n            }\n        }).catch(() => {\n            message.error('获取活动列表失败');\n        });\n    };\n\n    // 列的配置信息\n    columns = [\n        {title: 'ID', dataIndex: 'id', width: 50, align: 'center'},\n        {title: '活动名称', dataIndex: 'activities_name', align: 'center'},\n        {title: '开始时间', dataIndex: 'activities_time', align: 'center'},\n        {\n            title: '活动封面', dataIndex: 'activities_img', render: (text) => {\n                return (\n                    <img src={config.BASE_URL + text} alt=\"活动封面\" style={{width: 100}}/>\n                );\n            }, align: 'center'\n        },\n        {title: '活动价格', dataIndex: 'activities_price', align: 'center'},\n        {title: '活动天数', dataIndex: 'activities_bus_day_id', align: 'center'},\n        {\n            title: '首页焦点', dataIndex: 'is_focus', render: (text, record) => {\n                return (\n                    <Switch checkedChildren={\"是\"} unCheckedChildren={\"否\"} defaultChecked={text === 1}\n                            disabled={!record.focus_img} onChange={checked => {\n                        setFocusActivities(record.id, checked ? 1 : 0).then(result => {\n                            if (result && result.status === 1) {\n                                notification[\"success\"]({\n                                    message: `活动: ${record.activities_name}`,\n                                    description: `${checked ? '设置为' : '取消'}首页活动焦点`,\n                                });\n                                record.is_focus = checked ? 1 : 0;\n                            }\n                        });\n                    }}/>\n                );\n            }, align: 'center'\n        },\n        {\n            title: '操作', align: 'center', render: (text, record) => {\n                return (\n                    <div>\n                        <Button onClick={() => {\n                            this.props.history.push({\n                                pathname: '/activities/edit-activities',\n                                state: {\n                                    activities: record,\n                                },\n                            });\n                        }}>编辑</Button>\n                        <Divider type=\"vertical\"/>\n                        <Button onClick={() => {\n                            Modal.confirm({\n                                title: '确认删除吗',\n                                content: '删除此资源所有关联的内容都会被删除',\n                                okText: '确认',\n                                cancelText: '取消',\n                                onOk: () => {\n                                    deleteActivities(record.id).then(result => {\n                                        if (result && result.status === 1) {\n                                            message.success(result.msg);\n                                            this._loadData(this.state.pageNum, this.state.pageSize);\n                                        } else {\n                                            message.error('删除失败');\n                                        }\n                                    }).catch(() => {\n                                        message.error('删除失败');\n                                    });\n                                }\n                            });\n                        }}>删除</Button>\n                    </div>\n                );\n            }\n        },\n    ];\n\n    render() {\n        // 添加按钮\n        let AddBtn = (\n            <Button type={\"primary\"} onClick={() => {\n                this.props.history.push('/activities/add-activities');\n            }}>添加活动</Button>\n        );\n        return (\n            <div>\n                <Card title={\"活动列表\"} extra={AddBtn}>\n                    <Table rowKey={'id'} columns={this.columns} dataSource={this.state.activitiesList} pagination={{\n                        total: this.state.totalSize,\n                        pageSize: this.state.pageSize,\n                        onChange: (pageNum, pageSize) => {\n                            this._loadData(pageNum);\n                        }\n                    }}>\n                    </Table>\n                </Card>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport {Card, Form, Input, Button, Divider, DatePicker, Select, message, Switch} from 'antd';\nimport Moment from 'moment';\n\nimport RichTextEditor from \"../../../components/rich-text-editor\";\nimport LikeTag from '../../../components/LikeTag';\nimport LikeUploadImg from \"../../../components/LikeUploadImg\";\nimport config from \"../../../config/config\";\nimport {\n    getActivitiesAddress,\n    getActivitiesObject,\n    getActivitiesBus,\n    editActivities,\n} from '../../../api/activitiesApi';\nimport {getUser} from \"../../../api/adminApi\";\n\nconst {Item} = Form;\nconst {Option} = Select;\n\nexport default class AddActivities extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n            imageUrl: '',\n            focusImgUrl: '',\n            activities_address: [],\n            activities_object: [],\n            activities_bus: [],\n            tags: [],\n            activities_intro: '',\n            activities_trip: '',\n            activities_day: '',\n            activities_notice: '',\n\n        };\n        this.activities_intro_ref = React.createRef();\n        this.activities_trip_ref = React.createRef();\n        this.activities_days_ref = React.createRef();\n        this.activities_notice_ref = React.createRef();\n        this.activities_form_ref = React.createRef();\n    }\n\n    componentDidMount() {\n        // 1. 获取上一个界面的数据\n        if (this.props.location.state) {\n            const activitiesItem = this.props.location.state.activities;\n            if (activitiesItem) {\n                console.log(activitiesItem);\n                activitiesItem.activities_time = Moment(activitiesItem.activities_time);\n                this.activities_form_ref.current.setFieldsValue(activitiesItem);\n                // 1.1 处理活动标签\n                if (activitiesItem.activities_tag) {\n                    this.setState({tags: activitiesItem.activities_tag.split(',')})\n                }\n                // 1.2 处理其他的\n                this.setState({\n                    id: activitiesItem.id,\n                    imageUrl: activitiesItem.activities_img,\n                    focusImgUrl: activitiesItem.focus_img,\n                    activities_intro: activitiesItem.activities_intro,\n                    activities_trip: activitiesItem.activities_trip,\n                    activities_day: activitiesItem.activities_day,\n                    activities_notice: activitiesItem.activities_notice,\n                });\n            }\n        } else {\n            // this.state = () => false;\n            return this.props.history.goBack();\n        }\n        getActivitiesBus().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    activities_bus: result.data,\n                });\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n        getActivitiesObject().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    activities_object: result.data,\n                });\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n        getActivitiesAddress().then(result => {\n            if (result && result.status === 1) {\n                this.setState({\n                    activities_address: result.data,\n                });\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    componentWillUnmount() {\n        this.setState = (state, callback) => {\n            return false;\n        }\n    }\n\n    render() {\n        const {id, imageUrl, focusImgUrl, activities_address, activities_object, activities_bus, tags} = this.state;\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 4},\n            },\n            wrapperCol: {\n                xs: {span: 12},\n            }\n        };\n        const onFinish = (values) => {\n            console.log(values);\n            const {imageUrl, focusImgUrl, tags} = this.state;\n            if (!imageUrl) return message.warn('请上传活动封面');\n            const activities_time = Moment(values.activities_time).format('YYYY-MM-DD HH:mm:ss');\n            const {activities_name, activities_price, activities_address_id, activities_object_id, activities_bus_day_id, activities_count, is_focus} = values;\n            let tagStr = tags.join(',');\n            // 获取富文本中的内容\n            let activities_intro = this.activities_intro_ref.current.getContent();\n            let activities_trip = this.activities_trip_ref.current.getContent();\n            let activities_day = this.activities_days_ref.current.getContent();\n            let activities_notice = this.activities_notice_ref.current.getContent();\n            console.log(activities_intro);\n            // 调用添加活动API\n            editActivities(getUser().token, id, activities_name, activities_time, imageUrl, activities_price, tagStr, activities_count, activities_address_id, activities_object_id, activities_bus_day_id, activities_intro, activities_trip, activities_day, activities_notice, is_focus ? 1 : 0, focusImgUrl).then(result => {\n                console.log(result);\n                if (result?.status === 1) {\n                    message.success('修改活动成功');\n                    this.props.history.goBack();\n                }\n            }).catch(() => {\n                message.error('修改活动失败');\n            });\n        };\n        return (\n            <Card title={\"新增活动\"}>\n                <Form {...formItemLayout} onFinish={onFinish} ref={this.activities_form_ref}>\n                    <Item label={\"活动名称\"} name={\"activities_name\"} rules={[{required: true, message: '请输入活动名称'}]}>\n                        <Input/>\n                    </Item>\n                    <Item label={\"活动日期\"} name={\"activities_time\"} rules={[{required: true, message: '请选择活动日期'}]}>\n                        <DatePicker/>\n                    </Item>\n                    <Item label={\"活动价格\"} name={\"activities_price\"} rules={[{required: true, message: '请输入活动价格'}]}>\n                        <Input type={\"number\"}/>\n                    </Item>\n                    <Item label={\"报名人数\"} name={\"activities_count\"} rules={[{required: true, message: '请输入活动价格'}]}>\n                        <Input type={\"number\"}/>\n                    </Item>\n                    <Item label={\"活动地点\"} name={\"activities_address_id\"} rules={[{required: true, message: '请选择活动地点'}]}>\n                        <Select style={{width: 200}} placeholder={\"请选择活动地点\"}>\n                            {activities_address.map(item => (\n                                <Option key={item.id} value={item.id}>{item.activities_address}</Option>\n                            ))}\n                        </Select>\n                    </Item>\n                    <Item label={\"招生对象\"} name={\"activities_object_id\"} rules={[{required: true, message: '请选择招生对象'}]}>\n                        <Select style={{width: 200}} placeholder={\"请选择招生对象\"}>\n                            {activities_object.map(item => (\n                                <Option key={item.id} value={item.id}>{item.activities_object_name}</Option>\n                            ))}\n                        </Select>\n                    </Item>\n                    <Item label={\"选择营期\"} name={\"activities_bus_day_id\"} rules={[{required: true, message: '请选择营期'}]}>\n                        <Select style={{width: 200}} placeholder={\"请选择营期\"}>\n                            {activities_bus.map(item => (\n                                <Option key={item.id} value={item.id}>{item.activities_bus_day}</Option>\n                            ))}\n                        </Select>\n                    </Item>\n                    <Item label={\"活动标签\"}>\n                        <LikeTag tagsArr={tags} tagsCallBack={(tags) => {\n                            this.setState({tags});\n                        }}/>\n                    </Item>\n                    <Item label={\"活动封面图\"} name={\"activities_img\"}>\n                        <LikeUploadImg upLoadBtnTitle={\"上传封面\"} upLoadName={\"activities_img\"}\n                                       upLoadAction={\"/api/auth/activities/upload_activities\"}\n                                       upLoadImg={imageUrl ? config.BASE_URL + imageUrl : ''}\n                                       successCallBack={(name) => {\n                                           message.success('活动封面上传成功');\n                                           this.setState({imageUrl: name});\n                                       }}/>\n                    </Item>\n                    <Item label={\"首页轮播图\"} name={\"focus_img\"}>\n                        <LikeUploadImg upLoadBtnTitle={\"上传焦点图\"} upLoadName={\"activities_img\"}\n                                       upLoadAction={\"/api/auth/activities/upload_activities\"}\n                                       upLoadImg={focusImgUrl ? config.BASE_URL + focusImgUrl : ''}\n                                       successCallBack={(name) => {\n                                           message.success('活动焦点图上传成功');\n                                           this.setState({focusImgUrl: name});\n                                       }}/>\n                    </Item>\n                    <Item label={\"是否设置焦点\"} name={\"is_focus\"} valuePropName={\"checked\"}>\n                        <Switch checkedChildren=\"是\" unCheckedChildren=\"否\" disabled={!focusImgUrl}/>\n                    </Item>\n                    <Item label={\"活动介绍\"} name={\"activities_intro\"} wrapperCol={{span: 20}}>\n                        <RichTextEditor ref={this.activities_intro_ref}\n                                        upLoadAction={\"/api/auth/activities/upload_activities\"}\n                                        uploadName={\"activities_img\"} htmlContent={this.state.activities_intro}/>\n                    </Item>\n                    <Item label={\"行程安排\"} name={\"activities_trip\"} wrapperCol={{span: 20}}>\n                        <RichTextEditor ref={this.activities_trip_ref}\n                                        upLoadAction={\"/api/auth/activities/upload_activities\"}\n                                        uploadName={\"activities_img\"} htmlContent={this.state.activities_trip}/>\n                    </Item>\n                    <Item label={\"开营日期\"} name={\"activities_days\"} wrapperCol={{span: 20}}>\n                        <RichTextEditor ref={this.activities_days_ref}\n                                        upLoadAction={\"/api/auth/activities/upload_activities\"}\n                                        uploadName={\"activities_img\"} htmlContent={this.state.activities_day}/>\n                    </Item>\n                    <Item label={\"注意事项\"} name={\"activities_notice\"} wrapperCol={{span: 20}}>\n                        <RichTextEditor ref={this.activities_notice_ref}\n                                        upLoadAction={\"/api/auth/activities/upload_activities\"}\n                                        uploadName={\"activities_img\"} htmlContent={this.state.activities_notice}/>\n                    </Item>\n                    <Item wrapperCol={{span: 20}}>\n                        <div style={{textAlign: 'center', marginTop: 30}}>\n                            <Button type={\"primary\"} htmlType={\"submit\"}>修改</Button>\n                            <Divider type={\"vertical\"}/>\n                            <Button onClick={() => this.props.history.goBack()}>取消</Button>\n                        </div>\n                    </Item>\n                </Form>\n            </Card>\n        );\n    }\n}\n","import React from \"react\";\nimport {Switch,Route} from 'react-router-dom';\n\nimport NotFound from \"../notFound/not-found\";\nimport AddActivities from \"./pages/add-activities\";\nimport ActivitiesList from \"./pages/activities-list\";\nimport EditActivities from \"./pages/edit-activities\";\nexport default class LifeJob extends React.Component{\n    render() {\n        return (\n            <Switch>\n                <Route path={\"/activities/add-activities\"} component={AddActivities}/>\n                <Route path={\"/activities/edit-activities\"} component={EditActivities}/>\n                <Route path={\"/activities\"} component={ActivitiesList}/>\n                <Route component={NotFound}/>\n            </Switch>\n        );\n    }\n}\n","import React from \"react\";\nimport {Modal, Form, Input, Button, message} from 'antd';\nimport {LockOutlined} from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport md5 from 'blueimp-md5';\nimport {withRouter} from 'react-router-dom';\nimport {changeAdminPwd, getUser, removeUser} from '../../../api/adminApi';\nimport config from \"../../../config/config\";\n\nclass EditPassword extends React.Component {\n    static propTypes = {\n        visible: PropTypes.bool.isRequired,\n        hideFunc: PropTypes.func.isRequired,\n    }\n    handleCancel = e => {\n        console.log(e);\n        this.props.hideFunc();\n    }\n\n    render() {\n        const {visible} = this.props;\n        const onFinish = values => {\n            console.log(values);\n            if (values.old_password === values.new_password) return message.warning('新密码和旧密码不能一致');\n            // 密码加密\n            const old_pwd = md5(values.old_password, config.KEY);\n            const new_pwd = md5(values.new_password, config.KEY);\n            // 调用接口\n            changeAdminPwd(getUser().token, old_pwd, new_pwd).then(result => {\n                if (result && result.status === 1) {\n                    message.success(result.msg);\n                    // 清除用户信息\n                    removeUser();\n                    // 路由跳转\n                    this.props.history.replace('/login');\n                } else if (result && result.status === 0) {\n                    message.error(result.msg);\n                } else {\n                    message.error('服务器内部错误');\n                }\n            }).catch(() => {\n                message.error('修改密码失败');\n            });\n\n        }\n        return (\n            <Modal\n                title=\"修改密码\"\n                visible={visible}\n                onCancel={this.handleCancel}\n                footer={null}\n            >\n                <Form onFinish={onFinish} ref={this.formRef} style={{textAlign: 'center'}}>\n                    <Form.Item name={\"old_password\"} rules={[{required: true, message: '请输入旧密码'}]}>\n                        <Input prefix={<LockOutlined/>} type={\"password\"} placeholder={\"请输入旧密码\"}/>\n                    </Form.Item>\n                    <Form.Item name={\"new_password\"} rules={[{required: true, message: '请输入新密码'}]}>\n                        <Input prefix={<LockOutlined/>} type={\"password\"} placeholder={\"请输入新密码\"}/>\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type={\"primary\"} htmlType={\"submit\"}>修改密码</Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nexport default withRouter(EditPassword);\n","import React from \"react\";\nimport {Card, Form, Input, message, Button} from \"antd\";\nimport PubSub from 'pubsub-js';\n\nimport LikeUploadImg from \"../../../components/LikeUploadImg\";\nimport EditPassword from \"./edit-password\";\nimport {getUser, saveUser, changeAdminMsg} from '../../../api/adminApi';\nimport config from \"../../../config/config\";\n\nexport default class AccountSetting extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            account_icon: '',\n            editPwdPanelShow: false,\n            account: '',\n            account_name: '',\n            token: '',\n        };\n        // 创建表单ref\n        this.formRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // 获取本地管理员数据\n        const userObj = getUser();\n        this.setState({\n            account: userObj.account,\n            account_name: userObj.account_name,\n            account_icon: userObj.account_icon,\n            token: userObj.token,\n        }, () => {\n            // 设置默认值\n            const {account, account_name} = this.state;\n            this.formRef.current.setFieldsValue({\n                account, account_name\n            });\n        });\n    }\n\n    // 修改密码\n    editPassword = () => {\n        this.setState({\n            editPwdPanelShow: true,\n        });\n    }\n    _hidePwdPanel = () => {\n        this.setState({\n            editPwdPanelShow: false,\n        });\n    }\n\n    render() {\n        const {account_icon} = this.state;\n        const onFinish = values => {\n            console.log(values);\n            const {token, account_icon} = this.state;\n            // 改用修改管理员信息接口\n            changeAdminMsg(token, values.account_name, account_icon).then(result => {\n                if (result && result.status === 1) {\n                    // 更新管理员信息\n                    saveUser(result.data);\n                    message.success(result.msg);\n                    // 告知外界管理员信息修改成功\n                    PubSub.publish('changeAdminMsg', {});\n                }\n            }).catch(error => {\n                message.error('管理员信息修改失败');\n            })\n        }\n        const formItemLayout = {\n            labelCol: {\n                sm: {span: 6}\n            },\n            wrapperCol: {\n                sm: {span: 8}\n            }\n        }\n\n        return (\n            <Card title={\"管理员信息编辑\"}>\n                <Form {...formItemLayout} onFinish={onFinish} ref={this.formRef}>\n                    <Form.Item label={\"账户名\"} name={\"account\"}>\n                        <Input disabled/>\n                    </Form.Item>\n                    <Form.Item label={\"管理员名称\"} name={\"account_name\"}\n                               rules={[{required: true, message: '请输入管理员名称'}]}>\n                        <Input placeholder={\"请添加一个昵称\"}/>\n                    </Form.Item>\n                    <Form.Item label={\"管理员头像\"} name={\"account_icon\"}>\n                        <LikeUploadImg upLoadBtnTitle={\"上传头像\"} upLoadName={\"admin_avatar\"}\n                                       upLoadAction={\"/api/auth/admin/upload_admin_icon\"} successCallBack={(name) => {\n                            console.log(name);\n                            this.setState({\n                                account_icon: name\n                            })\n                        }} upLoadImg={config.BASE_URL + account_icon}/>\n                    </Form.Item>\n                    <Form.Item wrapperCol={{xs: {span: 24}}}>\n                        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%'}}>\n                            <Button type={\"primary\"} htmlType={\"submit\"}>修改</Button>\n                            <div style={{marginLeft: 10}}>或者 <span style={{color: 'blue', cursor: 'pointer'}}\n                                                                   onClick={this.editPassword}>修改密码</span></div>\n                        </div>\n                    </Form.Item>\n                </Form>\n                <EditPassword visible={this.state.editPwdPanelShow} hideFunc={this._hidePwdPanel}/>\n            </Card>\n        );\n    }\n}\n","import React from \"react\";\nexport default class MemberCount extends React.Component{\n    render() {\n        return (\n            <div style={{backgroundColor:'gold'}}>\n                <h1>会员统计</h1>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport {Switch, Route} from 'react-router-dom';\n\nimport AccountSetting from \"./pages/account-setting\";\nimport MemberCount from \"./pages/member-count\";\nimport NotFound from \"../notFound/not-found\";\n\nexport default class Setting extends React.Component {\n    render() {\n        return (\n            <div>\n                <Switch>\n                    <Route path=\"/setting/account\" component={AccountSetting}/>\n                    <Route path=\"/setting/member\" component={MemberCount}/>\n                    <Route component={NotFound}/>\n                </Switch>\n            </div>\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport {Layout,Modal} from 'antd';\nimport {Switch, Redirect, Route} from 'react-router-dom';\nimport PubSub from 'pubsub-js';\n\nimport LeftNav from './components/left-nav/left-nav';\nimport RightHeader from './components/right-header/right-header';\nimport './admin.css';\nimport Home from \"../home/home\";\nimport Resource from \"../resource/resource\";\nimport LifeJob from \"../lifejob/life-job\";\nimport Lives from \"../lives/lives\";\nimport Activities from \"../activities/activities\";\nimport Setting from \"../setting/setting\";\nimport NotFound from \"../notFound/not-found\";\nimport {isLogin} from '../../api/adminApi';\n\nconst {Content, Footer} = Layout;\n\nclass Admin extends Component {\n    componentDidMount() {\n        // 订阅token失效信息w\n        PubSub.subscribe('tokenOut',(msg)=>{\n            if (msg === 'tokenOut') {\n                Modal.warn({\n                    title: '登录信息过期',\n                    content: (\n                        <div>\n                            <p>请重新登录后再操作</p>\n                        </div>\n                    ),\n                    onOk: ()=>{\n                        this.props.history.replace('/login');\n                    }\n                });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        PubSub.unsubscribe('tokenOut');\n    }\n\n    state = {\n        collapsed: false,\n    };\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n\n    render() {\n        if (!isLogin()) {\n            return <Redirect to={\"/login\"}/>\n        }\n        return (\n            <Layout className=\"admin-pane\">\n                <LeftNav collapsed={this.state.collapsed}/>\n                <Layout>\n                    <RightHeader collapsed={this.state.collapsed} toggle={this.toggle}/>\n                    <Content className=\"admin-content\">\n                        <Switch>\n                            <Redirect exact from=\"/\" to=\"/home\"/>\n                            <Route path=\"/home\" component={Home}/>\n                            <Route path=\"/resource\" component={Resource}/>\n                            <Route path=\"/lifejob\" component={LifeJob}/>\n                            <Route path=\"/activities\" component={Activities}/>\n                            <Route path=\"/live\" component={Lives}/>\n                            <Route path=\"/setting\" component={Setting}/>\n                            <Route component={NotFound}/>\n                        </Switch>\n                    </Content>\n                    <Footer className=\"admin-footer\">引擎计划-后台管理系统</Footer>\n                </Layout>\n            </Layout>\n        );\n    }\n}\n\nexport default connect(null, null)(Admin)\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {HashRouter, Switch, Route} from 'react-router-dom';\n\nimport Login from \"./pages/login/login\";\nimport Admin from \"./pages/admin/admin\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <HashRouter>\n                <Switch>\n                    <Route path=\"/login\" component={Login}/>\n                    <Route path=\"/\" component={Admin}/>\n                </Switch>\n            </HashRouter>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {}\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","function* mySaga() {\n\n}\n\nexport default mySaga;\n","import {} from './actionTypes';\n\n// 状态\nconst defaultState = {}\n\nexport default (state = defaultState, action) => {\n    return state;\n}\n","import {createStore, applyMiddleware, compose} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport mySagas from \"./sagas\";\n\nimport reducers from './reducers';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n\nconst enhancer = composeEnhancers(\n    applyMiddleware(sagaMiddleware),\n);\n\nconst store = createStore(reducers, enhancer);\n\nsagaMiddleware.run(mySagas);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {ConfigProvider} from 'antd';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport moment from \"moment\";\nimport \"moment/locale/zh-cn\";\n// 引入Provider组件\nimport {Provider} from 'react-redux';\nimport store from \"./store\";\n\nmoment.locale('zh-cn');\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConfigProvider locale={zhCN}>\n            <App/>\n        </ConfigProvider>\n    </Provider>\n    , document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/xiaoliao.3a9407b0.png\";","module.exports = __webpack_public_path__ + \"static/media/xiaoliao.3a9407b0.png\";"],"sourceRoot":""}